<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Senparc.DynamicWebApi.WeChat_OfficialAccount</name>
  </assembly>
  <members>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetActivateTempInfo(System.String,System.String,System.Int32)">
      <summary>
            获取用户开卡时提交的信息（跳转型开卡组件）
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="activateTicket"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetArticleSummary(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取图文群发每日数据（getarticlesummary）
            最大时间跨度 1
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetArticleSummaryAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取图文群发每日数据（getarticlesummary）
            最大时间跨度 1
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetArticleTotal(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取图文群发总数据（getarticletotal）
            请注意，details中，每天对应的数值为该文章到该日为止的总量（而不是当日的量）
            最大时间跨度 1
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetArticleTotalAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取图文群发总数据（getarticletotal）
            请注意，details中，每天对应的数值为该文章到该日为止的总量（而不是当日的量）
            最大时间跨度 1
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetInterfaceSummary(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取接口分析数据（getinterfacesummary）
            最大时间跨度 30
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetInterfaceSummaryAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取接口分析数据（getinterfacesummary）
            最大时间跨度 30
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取消息发送概况数据（getupstreammsg）
            最大时间跨度 7
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetInterfaceSummaryHour(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取接口分析分时数据（getinterfacesummaryhour）
            最大时间跨度 1
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgDist(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取消息发送分布数据（getupstreammsgdist）
            最大时间跨度 15
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgDistAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取消息发送分布数据（getupstreammsgdist）
            最大时间跨度 15
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgDistMonth(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取消息发送分布月数据（getupstreammsgdistmonth）
            最大时间跨度 30
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetInterfaceSummaryHourAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取接口分析分时数据（getinterfacesummaryhour）
            最大时间跨度 1
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgDistMonthAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取消息发送分布月数据（getupstreammsgdistmonth）
            最大时间跨度 30
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsg(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取消息发送概况数据（getupstreammsg）
            最大时间跨度 7
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgDistWeek(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取消息发送分布周数据（getupstreammsgdistweek）
            最大时间跨度 30
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgMonth(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取消息发送月数据（getupstreammsgmonth）
            最大时间跨度 30
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgDistWeekAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取消息发送分布周数据（getupstreammsgdistweek）
            最大时间跨度 30
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgMonthAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取消息发送月数据（getupstreammsgmonth）
            最大时间跨度 30
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgWeek(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取消息发送周数据（getupstreammsgweek）
            最大时间跨度 30
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgHour(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取消息分送分时数据（getupstreammsghour）
            最大时间跨度 1
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgWeekAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取消息发送周数据（getupstreammsgweek）
            最大时间跨度 30
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUpStreamMsgHourAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取消息分送分时数据（getupstreammsghour）
            最大时间跨度 1
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUserCumulate(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取累计用户数据
            最大时间跨度 7
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUserRead(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取图文统计数据（getuserread）
            最大时间跨度 3
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUserCumulateAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取累计用户数据
            最大时间跨度 7
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUserReadAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取图文统计数据（getuserread）
            最大时间跨度 3
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUserReadHourAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】 获取图文统计分时数据（getuserreadhour）
             最大时间跨度 1
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUserShare(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取图文分享转发数据（getusershare）
            最大时间跨度 7
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUserReadHour(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取图文统计分时数据（getuserreadhour）
            最大时间跨度 1
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUserShareHour(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取图文分享转发分时数据（getusersharehour）
            最大时间跨度 1
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUserShareAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取图文分享转发数据（getusershare）
            最大时间跨度 7
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUserSummaryAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】 获取用户增减数据
             最大时间跨度 7
             </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUserShareHourAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取图文分享转发分时数据（getusersharehour）
            最大时间跨度 1
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AutoReplyApi_GetCurrentAutoreplyInfo(System.String)">
      <summary>
            获取自动回复规则
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AnalysisApi_GetUserSummary(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取用户增减数据
            最大时间跨度 7
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="beginDate">获取数据的起始日期，begin_date和end_date的差值需小于“最大时间跨度”（比如最大时间跨度为1时，begin_date和end_date的差值只能为0，才能小于1），否则会报错</param>
      <param name="endDate">获取数据的结束日期，end_date允许设置的最大值为昨日</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_AutoReplyApi_GetCurrentAutoreplyInfoAsync(System.String)">
      <summary>
            【异步方法】获取自动回复规则
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_ActivateUserFormSet(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.ActivateUserFormSetData,System.Int32)">
      <summary>
            设置开卡字段接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AddCardAfterPayAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.AddCardAfterPayData,System.Int32)">
      <summary>
            【异步方法】设置支付后投放卡券接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_ActivateUserFormSetAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.ActivateUserFormSetData,System.Int32)">
      <summary>
            【异步方法】设置开卡字段接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AddCardAfterPay(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.AddCardAfterPayData,System.Int32)">
      <summary>
            设置支付后投放卡券接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AddGiftCardPage(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.GiftCardPageData,System.Int32)">
      <summary>
            创建-礼品卡货架接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AddPayMemberRule(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.AddPayMemberRuleData,System.Int32)">
      <summary>
            增加支付即会员规则接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AddGiftCardPageAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.GiftCardPageData,System.Int32)">
      <summary>
            【异步方法】创建-礼品卡货架接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AddPayMemberRuleAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.AddPayMemberRuleData,System.Int32)">
      <summary>
            【异步方法】增加支付即会员规则接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AfterPay_BatchGetAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.AfterPay_BatchGetData,System.Int32)">
      <summary>
            【异步方法】批量查询支付后投放卡券规则接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AfterPay_BatchGet(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.AfterPay_BatchGetData,System.Int32)">
      <summary>
            批量查询支付后投放卡券规则接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AfterPay_GetById(System.String,System.String,System.Int32)">
      <summary>
            查询支付后投放卡券规则详情接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="ruleId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AgentQualification(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
             母商户资质申请接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="registerCapital">注册资本，数字，单位：分</param>
      <param name="businessLicenseMediaid">营业执照扫描件的media_id</param>
      <param name="taxRegistRationCertificateMediaid">税务登记证扫描件的media_id</param>
      <param name="lastQuarterTaxListingMediaid">上个季度纳税清单扫描件media_id</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AfterPay_GetByIdAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】查询支付后投放卡券规则详情接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="ruleId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AgentQualificationAsync(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
             【异步方法】母商户资质申请接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="registerCapital">注册资本，数字，单位：分</param>
      <param name="businessLicenseMediaid">营业执照扫描件的media_id</param>
      <param name="taxRegistRationCertificateMediaid">税务登记证扫描件的media_id</param>
      <param name="lastQuarterTaxListingMediaid">上个季度纳税清单扫描件media_id</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_ApiConfirmAuthorizationAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.ApiConfirmAuthorizationData,System.Int32)">
      <summary>
            【异步方法】确认授权
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_ApiConfirmAuthorization(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.ApiConfirmAuthorizationData,System.Int32)">
      <summary>
            确认授权
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_ApiGetAuthorizerInfo(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取授权方的账户信息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="componentAppid"></param>
      <param name="authorizerAppid"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_ApiQueryAuth(System.String,System.String,System.String,System.Int32)">
      <summary>
            使用授权码换取公众号的授权信息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="componentAppid"></param>
      <param name="authorizationCode"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_ApiGetAuthorizerInfoAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取授权方的账户信息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="componentAppid"></param>
      <param name="authorizerAppid"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_ApiQueryAuthAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】使用授权码换取公众号的授权信息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="componentAppid"></param>
      <param name="authorizationCode"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AuthoritySetAsync(System.String,System.String[],System.String[],System.Int32)">
      <summary>
             【异步方法】设置测试用户白名单
             由于卡券有审核要求，为方便公众号调试，可以设置一些测试帐号，这些帐号可以领取未通过审核的卡券，体验整个流程。
            注：同时支持“openid”、“username”两种字段设置白名单，总数上限为10 个。
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openIds">测试的openid 列表</param>
      <param name="userNames">测试的微信号列表</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_BatchGetCardMerchant(System.String,System.String,System.Int32)">
      <summary>
            拉取子商户列表接口
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="nextGet">获取子商户列表，注意最开始时为空。每次拉取20个子商户，下次拉取时填入返回数据中该字段的值，该值无实际意义。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_AuthoritySet(System.String,System.String[],System.String[],System.Int32)">
      <summary>
             设置测试用户白名单
             由于卡券有审核要求，为方便公众号调试，可以设置一些测试帐号，这些帐号可以领取未通过审核的卡券，体验整个流程。
            注：同时支持“openid”、“username”两种字段设置白名单，总数上限为10 个。
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openIds">测试的openid 列表</param>
      <param name="userNames">测试的微信号列表</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_BatchGetCardMerchantAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】拉取子商户列表接口
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="nextGet">获取子商户列表，注意最开始时为空。每次拉取20个子商户，下次拉取时填入返回数据中该字段的值，该值无实际意义。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_BindToGiftCard(System.String,System.String,System.String,System.Int32)">
      <summary>
            绑定商户号到礼品卡小程序接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="subId">微信支付子商户号</param>
      <param name="wxaAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_BindToGiftCardAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】绑定商户号到礼品卡小程序接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="subId">微信支付子商户号</param>
      <param name="wxaAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_BoardingPassCheckInAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
      <summary>
            【异步方法】飞机票在线选座
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">飞机票的序列</param>
      <param name="cardId">需办理值机的机票card_id。自定义code 的飞机票为必</param>
      <param name="passengerName">乘客姓名，上限为15 个汉字</param>
      <param name="classType">舱等，如头等舱等，上限为5 个汉字</param>
      <param name="seat">乘客座位号</param>
      <param name="etktBnr">电子客票号，上限为14 个数字</param>
      <param name="qrcodeData">二维码数据。乘客用于值机的二维码字符串，微信会通过此数据为用户生成值机用的二维码</param>
      <param name="isCancel">是否取消值机。填写true 或false。true 代表取消，如填写true 上述字段（如calss 等）均不做判断，机票返回未值机状态，乘客可重新值机。默认填写false</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardBatchGet(System.String,System.Int32,System.Int32,System.Collections.Generic.List{System.String},System.Int32)">
      <summary>
            批量查询卡列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="offset">查询卡列表的起始偏移量，从0 开始，即offset: 5 是指从从列表里的第六个开始读取。</param>
      <param name="count">需要查询的卡片的数量（数量最大50）</param>
      <param name="statusList">状态列表</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_BoardingPassCheckIn(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
      <summary>
            飞机票在线选座
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">飞机票的序列</param>
      <param name="cardId">需办理值机的机票card_id。自定义code 的飞机票为必</param>
      <param name="passengerName">乘客姓名，上限为15 个汉字</param>
      <param name="classType">舱等，如头等舱等，上限为5 个汉字</param>
      <param name="seat">乘客座位号</param>
      <param name="etktBnr">电子客票号，上限为14 个数字</param>
      <param name="qrcodeData">二维码数据。乘客用于值机的二维码字符串，微信会通过此数据为用户生成值机用的二维码</param>
      <param name="isCancel">是否取消值机。填写true 或false。true 代表取消，如填写true 上述字段（如calss 等）均不做判断，机票返回未值机状态，乘客可重新值机。默认填写false</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardBatchGetAsync(System.String,System.Int32,System.Int32,System.Collections.Generic.List{System.String},System.Int32)">
      <summary>
            【异步方法】批量查询卡列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="offset">查询卡列表的起始偏移量，从0 开始，即offset: 5 是指从从列表里的第六个开始读取。</param>
      <param name="count">需要查询的卡片的数量（数量最大50）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardChangeCode(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            更改code
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">卡券的code 编码</param>
      <param name="cardId">卡券ID</param>
      <param name="newCode">新的卡券code 编码</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardConsumeAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】卡券消耗code
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">要消耗的序列号</param>
      <param name="cardId">要消耗序列号所述的card_id，创建卡券时use_custom_code 填写true 时必填。非自定义code不必填写。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardDecrypt(System.String,System.String,System.Int32)">
      <summary>
            code 解码接口
            code 解码接口支持两种场景：
            1.商家获取choos_card_info 后，将card_id 和encrypt_code 字段通过解码接口，获取真实code。
            2.卡券内跳转外链的签名中会对code 进行加密处理，通过调用解码接口获取真实code。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="encryptCode">通过choose_card_info 获取的加密字符串</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardChangeCodeAsync(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】更改code
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">卡券的code 编码</param>
      <param name="cardId">卡券ID</param>
      <param name="newCode">新的卡券code 编码</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardDecryptAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】code 解码接口
            code 解码接口支持两种场景：
            1.商家获取choos_card_info 后，将card_id 和encrypt_code 字段通过解码接口，获取真实code。
            2.卡券内跳转外链的签名中会对code 进行加密处理，通过调用解码接口获取真实code。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="encryptCode">通过choose_card_info 获取的加密字符串</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardDelete(System.String,System.String,System.Int32)">
      <summary>
            删除卡券
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">卡券ID</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardConsume(System.String,System.String,System.String,System.Int32)">
      <summary>
            卡券消耗code
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">要消耗的序列号</param>
      <param name="cardId">要消耗序列号所述的card_id，创建卡券时use_custom_code 填写true 时必填。非自定义code不必填写。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardDeleteAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】删除卡券
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">卡券ID</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardDetailGetAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】查询卡券详情
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardDetailGet(System.String,System.String,System.Int32)">
      <summary>
            查询卡券详情
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardUnavailable(System.String,System.String,System.String,System.Int32)">
      <summary>
            设置卡券失效接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">需要设置为失效的code</param>
      <param name="cardId">自定义code 的卡券必填。非自定义code 的卡券不填。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardUnavailableAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】设置卡券失效接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">需要设置为失效的code</param>
      <param name="cardId">自定义code 的卡券必填。非自定义code 的卡券不填。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardUpdateAsync(System.String,Senparc.Weixin.MP.CardType,System.Object,System.String,System.Int32)">
      <summary>
            【异步方法】更改卡券信息接口
            支持更新部分通用字段及特殊卡券（会员卡、飞机票、电影票、红包）中特定字段的信息。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardType">卡券种类，会员卡、飞机票、电影票、红包中的一种</param>
      <param name="data">创建卡券需要的数据，格式可以看CardUpdateData.cs</param>
      <param name="cardId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CardUpdate(System.String,Senparc.Weixin.MP.CardType,System.Object,System.String,System.Int32)">
      <summary>
            更改卡券信息接口
            支持更新部分通用字段及特殊卡券（会员卡、飞机票、电影票、红包）中特定字段的信息。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardType">卡券种类，会员卡、飞机票、电影票、红包中的一种</param>
      <param name="data">创建卡券需要的数据，格式可以看CardUpdateData.cs</param>
      <param name="cardId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CheckAgentQualification(System.String,System.Int32)">
      <summary>
            母商户资质审核查询接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CheckCode(System.String,System.String,System.String[],System.Int32)">
      <summary>
            核查code
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">进行导入code的卡券ID。</param>
      <param name="codeList">已经微信卡券后台的自定义code，上限为100个。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CheckAgentQualificationAsync(System.String,System.Int32)">
      <summary>
            【异步方法】母商户资质审核查询接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CheckCodeAsync(System.String,System.String,System.String[],System.Int32)">
      <summary>
            【异步方法】核查code
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">进行导入code的卡券ID。</param>
      <param name="codeList">已经微信卡券后台的自定义code，上限为100个。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CheckMerchantQualificationAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】子商户资质审核查询接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="appid"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CheckMerchantQualification(System.String,System.String,System.Int32)">
      <summary>
            子商户资质审核查询接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="appid"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CodeDeposit(System.String,System.String,System.String[],System.Int32)">
      <summary>
             导入code
            
             新创建卡券情况
             如果开发者打算新创建一张支持导入code模式的卡券，不同于以往的创建方式，建议开发者采用以下流程创建预存code模式卡券，否则会报错。
             步骤一：创建预存模式卡券，将库存quantity初始值设置为0，并填入Deposit_Mode字段；
             步骤二：待卡券通过审核后，调用导入code接口并核查code；
             步骤三：调用修改库存接口，须令卡券库存小于或等于导入code的数目。（为了避免混乱建议设置为相等）
            
             注： 1）单次调用接口传入code的数量上限为100个。
             2）每一个 code 均不能为空串。
             3）导入结束后系统会自动判断提供方设置库存与实际导入code的量是否一致。
             4）导入失败支持重复导入，提示成功为止。
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">需要进行导入code的卡券ID</param>
      <param name="codeList">需导入微信卡券后台的自定义code，上限为100个。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CodeMark(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            Mark(占用)Code接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">卡券的code码。</param>
      <param name="cardId">卡券的ID。</param>
      <param name="openId">用券用户的openid。</param>
      <param name="isMark">是否要mark（占用）这个code，填写true或者false，表示占用或解除占用。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CodeDepositAsync(System.String,System.String,System.String[],System.Int32)">
      <summary>
             【异步方法】导入code
            
             新创建卡券情况
             如果开发者打算新创建一张支持导入code模式的卡券，不同于以往的创建方式，建议开发者采用以下流程创建预存code模式卡券，否则会报错。
             步骤一：创建预存模式卡券，将库存quantity初始值设置为0，并填入Deposit_Mode字段；
             步骤二：待卡券通过审核后，调用导入code接口并核查code；
             步骤三：调用修改库存接口，须令卡券库存小于或等于导入code的数目。（为了避免混乱建议设置为相等）
            
             注： 1）单次调用接口传入code的数量上限为100个。
             2）每一个 code 均不能为空串。
             3）导入结束后系统会自动判断提供方设置库存与实际导入code的量是否一致。
             4）导入失败支持重复导入，提示成功为止。
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">需要进行导入code的卡券ID</param>
      <param name="codeList">需导入微信卡券后台的自定义code，上限为100个。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CodeMarkAsync(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】Mark(占用)Code接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">卡券的code码。</param>
      <param name="cardId">卡券的ID。</param>
      <param name="openId">用券用户的openid。</param>
      <param name="isMark">是否要mark（占用）这个code，填写true或者false，表示占用或解除占用。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CreateActivityAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.CreateActivityData,System.Int32)">
      <summary>
            【异步方法】创建支付后领取立减金活动接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CreateActivity(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.CreateActivityData,System.Int32)">
      <summary>
            创建支付后领取立减金活动接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CreateCard(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.BaseCardInfo,System.Int32)">
      <summary>
            创建卡券
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardInfo">创建卡券需要的数据，格式可以看CardCreateData.cs</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CreateMultipleCardQR(System.String,System.String[],System.String,System.String,System.String,System.Boolean,System.String,System.Int32)">
      <summary>
            创建发行多个卡券的二维码
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="cardIds"></param>
      <param name="code"></param>
      <param name="openId"></param>
      <param name="expireSeconds"></param>
      <param name="isUniqueCode"></param>
      <param name="outer_id"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CreateCardAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.BaseCardInfo,System.Int32)">
      <summary>
            【异步方法】创建卡券
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardInfo">创建卡券需要的数据，格式可以看CardCreateData.cs</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CreateQR(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Int32)">
      <summary>
            生成卡券二维码
            获取二维码ticket 后，开发者可用ticket 换取二维码图片。换取指引参考：http://mp.weixin.qq.com/wiki/index.php?title=生成带参数的二维码
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">卡券ID</param>
      <param name="code">指定卡券code 码，只能被领一次。use_custom_code 字段为true 的卡券必须填写，非自定义code 不必填写。</param>
      <param name="openId">指定领取者的openid，只有该用户能领取。bind_openid 字段为true 的卡券必须填写，非自定义openid 不必填写。</param>
      <param name="expireSeconds">指定二维码的有效时间，范围是60 ~ 1800 秒。不填默认为永久有效。</param>
      <param name="isUniqueCode">指定下发二维码，生成的二维码随机分配一个code，领取后不可再次扫描。填写true 或false。默认false。</param>
      <param name="outer_id">自定义应用场景ID（v13.7.3起支持）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_DeleteAfterPayRule(System.String,System.String,System.Int32)">
      <summary>
            删除支付后投放卡券规则接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="ruleId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_CreateQRAsync(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Int32)">
      <summary>
            【异步方法】生成卡券二维码
            获取二维码ticket 后，开发者可用ticket 换取二维码图片。换取指引参考：http://mp.weixin.qq.com/wiki/index.php?title=生成带参数的二维码
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">卡券ID</param>
      <param name="code">指定卡券code 码，只能被领一次。use_custom_code 字段为true 的卡券必须填写，非自定义code 不必填写。</param>
      <param name="openId">指定领取者的openid，只有该用户能领取。bind_openid 字段为true 的卡券必须填写，非自定义openid 不必填写。</param>
      <param name="expireSeconds">指定二维码的有效时间，范围是60 ~ 1800 秒。不填默认为永久有效。</param>
      <param name="isUniqueCode">指定下发二维码，生成的二维码随机分配一个code，领取后不可再次扫描。填写true 或false。默认false。</param>
      <param name="outer_id">自定义应用场景ID（v13.7.3起支持）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_DeleteAfterPayRuleAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】删除支付后投放卡券规则接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="ruleId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_DeletePayMemberRuleAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.DeletePayMemberRuleData,System.Int32)">
      <summary>
            【异步方法】删除支付即会员规则接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_DeletePayMemberRule(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.DeletePayMemberRuleData,System.Int32)">
      <summary>
            删除支付即会员规则接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_DownGiftCardPage(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.DownGiftCardPage,System.Int32)">
      <summary>
            下架-礼品卡货架接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_DownGiftCardPageAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.DownGiftCardPage,System.Int32)">
      <summary>
            【异步方法】下架-礼品卡货架接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetApplyProtocolAsync(System.String,System.Int32)">
      <summary>
            【异步方法】卡券开放类目查询接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetActivateTempInfoAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取用户开卡时提交的信息（跳转型开卡组件）
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="activateTicket"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardBizuinInfo(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
            拉取卡券概况数据接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">查询数据的起始时间。</param>
      <param name="endDate">查询数据的截至时间。</param>
      <param name="condSource">卡券来源，0为公众平台创建的卡券数据、1是API创建的卡券数据</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetApplyProtocol(System.String,System.Int32)">
      <summary>
            卡券开放类目查询接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardBizuinInfoAsync(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
            【异步方法】拉取卡券概况数据接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">查询数据的起始时间。</param>
      <param name="endDate">查询数据的截至时间。</param>
      <param name="condSource">卡券来源，0为公众平台创建的卡券数据、1是API创建的卡券数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardInfo(System.String,System.String,System.String,System.Int32,System.String,System.Int32)">
      <summary>
            获取免费券数据接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">查询数据的起始时间。</param>
      <param name="endDate">查询数据的截至时间。</param>
      <param name="condSource">卡券来源，0为公众平台创建的卡券数据、1是API创建的卡券数据</param>
      <param name="cardId">卡券ID。填写后，指定拉出该卡券的相关数据。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardListAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取用户已领取卡券
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId">需要查询的用户openid</param>
      <param name="cardId">卡券ID。不填写时默认查询当前appid下的卡券。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardMemberCardDetail(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            拉取单张会员卡数据接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">查询数据的起始时间。</param>
      <param name="endDate">查询数据的截至时间。</param>
      <param name="cardId">卡券id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardInfoAsync(System.String,System.String,System.String,System.Int32,System.String,System.Int32)">
      <summary>
            获取免费券数据接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">查询数据的起始时间。</param>
      <param name="endDate">查询数据的截至时间。</param>
      <param name="condSource">卡券来源，0为公众平台创建的卡券数据、1是API创建的卡券数据</param>
      <param name="cardId">卡券ID。填写后，指定拉出该卡券的相关数据。</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardMemberCardDetailAsync(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】拉取单张会员卡数据接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">查询数据的起始时间。</param>
      <param name="endDate">查询数据的截至时间。</param>
      <param name="cardId">卡券id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardList(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取用户已领取卡券
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId">需要查询的用户openid</param>
      <param name="cardId">卡券ID。不填写时默认查询当前appid下的卡券。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardMemberCardInfo(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
            拉取会员卡数据接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">查询数据的起始时间。</param>
      <param name="endDate">查询数据的截至时间。</param>
      <param name="condSource">卡券来源，0为公众平台创建的卡券数据、1是API创建的卡券数据</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardMerchantAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】拉取单个子商户信息接口
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="appid"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardMemberCardInfoAsync(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
            【异步方法】拉取会员卡数据接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">查询数据的起始时间。</param>
      <param name="endDate">查询数据的截至时间。</param>
      <param name="condSource">卡券来源，0为公众平台创建的卡券数据、1是API创建的卡券数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardUrl(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取开卡插件参数
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="cardId"></param>
      <param name="outerStr"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardMerchant(System.String,System.String,System.Int32)">
      <summary>
            拉取单个子商户信息接口
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="appid"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCardUrlAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取开卡插件参数
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="cardId"></param>
      <param name="outerStr"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCoinsInfo(System.String,System.Int32)">
      <summary>
            查询券点余额接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetDepositCountAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】查询导入code数目
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">进行导入code的卡券ID。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetCoinsInfoAsync(System.String,System.Int32)">
      <summary>
            【异步方法】查询券点余额接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetGiftCardOrderInfo(System.String,System.String,System.Int32)">
      <summary>
            查询-单个礼品卡订单信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="orderId">礼品卡订单号，商户可以通过购买成功的事件推送或者批量查询订单接口获得</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetDepositCount(System.String,System.String,System.Int32)">
      <summary>
            查询导入code数目
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">进行导入code的卡券ID。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetGiftCardOrderInfoAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】查询-单个礼品卡订单信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="orderId">礼品卡订单号，商户可以通过购买成功的事件推送或者批量查询订单接口获得</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetGiftCardOrderListInfo(System.String,System.String,System.String,Senparc.Weixin.MP.SortType,System.Int32,System.Int32,System.Int32)">
      <summary>
            查询-批量查询礼品卡订单信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="beginTime">查询的时间起点，十位时间戳（utc+8）</param>
      <param name="endTime">查询的时间终点，十位时间戳（utc+8</param>
      <param name="sortType">填"ASC" / "DESC"，表示对订单创建时间进行“升 / 降”排序</param>
      <param name="offSet">查询的订单偏移量，如填写100则表示从第100个订单开始拉取</param>
      <param name="count">查询订单的数量，如offset填写100，count填写10，则表示查询第100个到第110个订单</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetGiftCardPageInfoAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】查询-礼品卡货架信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="pageId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetGiftCardPageList(System.String,System.Int32)">
      <summary>
            查询-礼品卡货架列表接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetGiftCardOrderListInfoAsync(System.String,System.String,System.String,Senparc.Weixin.MP.SortType,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】查询-批量查询礼品卡订单信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="beginTime">查询的时间起点，十位时间戳（utc+8）</param>
      <param name="endTime">查询的时间终点，十位时间戳（utc+8</param>
      <param name="sortType">填"ASC" / "DESC"，表示对订单创建时间进行“升 / 降”排序</param>
      <param name="offSet">查询的订单偏移量，如填写100则表示从第100个订单开始拉取</param>
      <param name="count">查询订单的数量，如offset填写100，count填写10，则表示查询第100个到第110个订单</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetGiftCardPageListAsync(System.String,System.Int32)">
      <summary>
            【异步方法】查询-礼品卡货架列表接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetGiftCardPageInfo(System.String,System.String,System.Int32)">
      <summary>
            查询-礼品卡货架信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="pageId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetHtml(System.String,System.String,System.Int32)">
      <summary>
            图文消息群发卡券
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetHtmlAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】图文消息群发卡券
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetOrderListAsync(System.String,System.Int32,System.Int32,System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.NorFilter,Senparc.Weixin.MP.AdvancedAPIs.Card.SortInfo,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】查询券点流水详情接口
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="offset">分批查询的起点，默认为0</param>
      <param name="count">分批查询的数量</param>
      <param name="orderType">所要拉取的订单类型ORDER_TYPE_SYS_ADD 平台赠送 ORDER_TYPE_WXPAY 充值 ORDER_TYPE_REFUND 库存回退券点 ORDER_TYPE_REDUCE 券点兑换库存 ORDER_TYPE_SYS_REDUCE 平台扣减</param>
      <param name="norFilter">反选，不要拉取的订单</param>
      <param name="sortInfo">对结果排序</param>
      <param name="beginTime">批量查询订单的起始事件，为时间戳，默认1周前</param>
      <param name="endTime">批量查询订单的结束事件，为时间戳，默认为当前时间</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetOrderList(System.String,System.Int32,System.Int32,System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.NorFilter,Senparc.Weixin.MP.AdvancedAPIs.Card.SortInfo,System.Int32,System.Int32,System.Int32)">
      <summary>
            查询券点流水详情接口
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="offset">分批查询的起点，默认为0</param>
      <param name="count">分批查询的数量</param>
      <param name="orderType">所要拉取的订单类型ORDER_TYPE_SYS_ADD 平台赠送 ORDER_TYPE_WXPAY 充值 ORDER_TYPE_REFUND 库存回退券点 ORDER_TYPE_REDUCE 券点兑换库存 ORDER_TYPE_SYS_REDUCE 平台扣减</param>
      <param name="norFilter">反选，不要拉取的订单</param>
      <param name="sortInfo">对结果排序</param>
      <param name="beginTime">批量查询订单的起始事件，为时间戳，默认1周前</param>
      <param name="endTime">批量查询订单的结束事件，为时间戳，默认为当前时间</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetPayMemberRule(System.String,System.String,System.Int32)">
      <summary>
            查询商户号支付即会员规则接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="mchId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetpayPrice(System.String,System.String,System.Int32,System.Int32)">
      <summary>
             对优惠券批价
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">需要来配置库存的card_id</param>
      <param name="quantity">本次需要兑换的库存数目</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetPayMemberRuleAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】查询商户号支付即会员规则接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="mchId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_GetpayPriceAsync(System.String,System.String,System.Int32,System.Int32)">
      <summary>
             【异步方法】对优惠券批价
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">需要来配置库存的card_id</param>
      <param name="quantity">本次需要兑换的库存数目</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_MemberCardActivate(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
             激活/绑定会员卡
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="membershipNumber">必填，会员卡编号，作为序列号显示在用户的卡包里。</param>
      <param name="code">创建会员卡时获取的code</param>
      <param name="activateEndTime">激活后的有效截至时间。若不填写默认以创建时的 data_info 为准。Unix时间戳格式。</param>
      <param name="initBonus">初始积分，不填为0</param>
      <param name="initBalance">初始余额，不填为0</param>
      <param name="initCustomFieldValue1">创建时字段custom_field1定义类型的初始值，限制为4个汉字，12字节。</param>
      <param name="initCustomFieldValue2">创建时字段custom_field2定义类型的初始值，限制为4个汉字，12字节。</param>
      <param name="initCustomFieldValue3">创建时字段custom_field3定义类型的初始值，限制为4个汉字，12字节。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="cardId"></param>
      <param name="activateBeginTime">激活后的有效起始时间。若不填写默认以创建时的 data_info 为准。Unix时间戳格式。</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_MerchantQualification(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
             子商户资质申请接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="appid">子商户公众号的appid</param>
      <param name="name">子商户商户名，用于显示在卡券券面</param>
      <param name="logoMediaid">子商户logo，用于显示在子商户卡券的券面</param>
      <param name="businessLicenseMediaid">营业执照或个体工商户执照扫描件的media_id</param>
      <param name="operatorIdCardMediaid">当子商户为个体工商户且无公章时，授权函须签名，并额外提交该个体工商户经营者身份证扫描件的media_id</param>
      <param name="agreementFileMediaid">子商户与第三方签署的代理授权函的media_id</param>
      <param name="primaryCategoryId">一级类目id</param>
      <param name="secondaryCategoryId">二级类目id</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_MemberCardActivateAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
             【异步方法】激活/绑定会员卡
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="membershipNumber">必填，会员卡编号，作为序列号显示在用户的卡包里。</param>
      <param name="code">创建会员卡时获取的code</param>
      <param name="activateEndTime">激活后的有效截至时间。若不填写默认以创建时的 data_info 为准。Unix时间戳格式。</param>
      <param name="initBonus">初始积分，不填为0</param>
      <param name="initBalance">初始余额，不填为0</param>
      <param name="initCustomFieldValue1">创建时字段custom_field1定义类型的初始值，限制为4个汉字，12字节。</param>
      <param name="initCustomFieldValue2">创建时字段custom_field2定义类型的初始值，限制为4个汉字，12字节。</param>
      <param name="initCustomFieldValue3">创建时字段custom_field3定义类型的初始值，限制为4个汉字，12字节。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="cardId"></param>
      <param name="activateBeginTime">激活后的有效起始时间。若不填写默认以创建时的 data_info 为准。Unix时间戳格式。</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_MerchantQualificationAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
             【异步方法】子商户资质申请接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="appid">子商户公众号的appid</param>
      <param name="name">子商户商户名，用于显示在卡券券面</param>
      <param name="logoMediaid">子商户logo，用于显示在子商户卡券的券面</param>
      <param name="businessLicenseMediaid">营业执照或个体工商户执照扫描件的media_id</param>
      <param name="operatorIdCardMediaid">当子商户为个体工商户且无公章时，授权函须签名，并额外提交该个体工商户经营者身份证扫描件的media_id</param>
      <param name="agreementFileMediaid">子商户与第三方签署的代理授权函的media_id</param>
      <param name="primaryCategoryId">一级类目id</param>
      <param name="secondaryCategoryId">二级类目id</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_ModifyStock(System.String,System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            修改库存接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">卡券ID</param>
      <param name="increaseStockValue">增加多少库存，支持不填或填0</param>
      <param name="reduceStockValue">减少多少库存，可以不填或填0</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_MemberCardDeal(System.String,System.String,System.String,System.String,System.Decimal,System.Decimal,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
      <summary>
            会员卡交易
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">要消耗的序列号</param>
      <param name="cardId">要消耗序列号所述的card_id。自定义code 的会员卡必填</param>
      <param name="recordBonus">商家自定义积分消耗记录，不超过14 个汉字</param>
      <param name="addBonus">需要变更的积分，扣除积分用“-“表</param>
      <param name="addBalance">需要变更的余额，扣除金额用“-”表示。单位为分</param>
      <param name="recordBalance">商家自定义金额消耗记录，不超过14 个汉字</param>
      <param name="isNotifyBonus">积分变动时是否触发系统模板消息，默认为true</param>
      <param name="isNotifyBalance">余额变动时是否触发系统模板消息，默认为true</param>
      <param name="isNotifyCustomField1">自定义group1变动时是否触发系统模板消息，默认为false。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_ModifyStockAsync(System.String,System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】修改库存接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">卡券ID</param>
      <param name="increaseStockValue">增加多少库存，支持不填或填0</param>
      <param name="reduceStockValue">减少多少库存，可以不填或填0</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_MemberCardDealAsync(System.String,System.String,System.String,System.String,System.Decimal,System.Decimal,System.String,System.Int32)">
      <summary>
            【异步方法】会员卡交易
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">要消耗的序列号</param>
      <param name="cardId">要消耗序列号所述的card_id。自定义code 的会员卡必填</param>
      <param name="recordBonus">商家自定义积分消耗记录，不超过14 个汉字</param>
      <param name="addBonus">需要变更的积分，扣除积分用“-“表</param>
      <param name="addBalance">需要变更的余额，扣除金额用“-”表示。单位为分</param>
      <param name="recordBalance">商家自定义金额消耗记录，不超过14 个汉字</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_MovieCardUpdate(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String[],System.Int32)">
      <summary>
            更新电影票
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">电影票的序列号</param>
      <param name="cardId">电影票card_id。自定义code 的电影票为必填，非自定义code 的电影票不必填。</param>
      <param name="ticketClass">电影票的类别，如2D、3D</param>
      <param name="showTime">电影放映时间对应的时间戳</param>
      <param name="duration">放映时长，填写整数</param>
      <param name="screeningRoom">该场电影的影厅信息</param>
      <param name="seatNumbers">座位号</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_PayActive(System.String,System.Int32)">
      <summary>
            开通券点账户接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_MovieCardUpdateAsync(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String[],System.Int32)">
      <summary>
            【异步方法】更新电影票
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">电影票的序列号</param>
      <param name="cardId">电影票card_id。自定义code 的电影票为必填，非自定义code 的电影票不必填。</param>
      <param name="ticketClass">电影票的类别，如2D、3D</param>
      <param name="showTime">电影放映时间对应的时间戳</param>
      <param name="duration">放映时长，填写整数</param>
      <param name="screeningRoom">该场电影的影厅信息</param>
      <param name="seatNumbers">座位号</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_PayActiveAsync(System.String,System.Int32)">
      <summary>
            【异步方法】开通券点账户接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_PayCellSetAsync(System.String,System.String,System.Boolean,System.Int32)">
      <summary>
            【异步方法】设置微信买单接口
            注意：在调用买单接口之前，请开发者务必确认是否已经开通了微信支付以及对相应的cardid设置了门店，否则会报错
            错误码，0为正常；43008为商户没有开通微信支付权限
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">卡券ID</param>
      <param name="isOpen">是否开启买单功能，填true/false</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_PayCellSet(System.String,System.String,System.Boolean,System.Int32)">
      <summary>
            设置微信买单接口
            注意：在调用买单接口之前，请开发者务必确认是否已经开通了微信支付以及对相应的cardid设置了门店，否则会报错
            错误码，0为正常；43008为商户没有开通微信支付权限
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">卡券ID</param>
      <param name="isOpen">是否开启买单功能，填true/false</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_PayConfirm(System.String,System.String,System.Int32,System.String,System.Int32)">
      <summary>
            确认兑换库存接口
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">需要来兑换库存的card_id</param>
      <param name="quantity">本次需要兑换的库存数目</param>
      <param name="orderId">仅可以使用上面得到的订单号，保证批价有效性</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_PayGetOrder(System.String,System.Int32,System.Int32)">
      <summary>
            查询订单详情接口
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="orderId">上一步中获得的订单号，作为一次交易的唯一凭证</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_PayGetOrderAsync(System.String,System.Int32,System.Int32)">
      <summary>
            【异步方法】查询订单详情接口
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="orderId">上一步中获得的订单号，作为一次交易的唯一凭证</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_PayConfirmAsync(System.String,System.String,System.Int32,System.String,System.Int32)">
      <summary>
            【异步方法】确认兑换库存接口
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">需要来兑换库存的card_id</param>
      <param name="quantity">本次需要兑换的库存数目</param>
      <param name="orderId">仅可以使用上面得到的订单号，保证批价有效性</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_PayGiftCardAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】申请微信支付礼品卡权限接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="subId">微信支付子商户号</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_PayGiftCard(System.String,System.String,System.Int32)">
      <summary>
            申请微信支付礼品卡权限接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="subId">微信支付子商户号</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_RecommendSet(System.String,System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.CardCell,Senparc.Weixin.MP.AdvancedAPIs.Card.UrlCell,System.Int32)">
      <summary>
            设置跟随推荐接口
            有 使用消息配置卡券（cardCellData） 和 使用消息配置URL（urlCellData） 两种方式
            注意：cardCellData和urlCellData必须也只能选择一个，不可同时为空
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">卡券ID</param>
      <param name="cardCellData">使用消息配置卡券数据</param>
      <param name="urlCellData">使用消息配置URL数据</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_PayRecharge(System.String,System.Int32,System.Int32)">
      <summary>
            充值券点接口
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="coinCount">需要充值的券点数目，1点=1元</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_RefundAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】退款接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_RecommendSetAsync(System.String,System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.CardCell,Senparc.Weixin.MP.AdvancedAPIs.Card.UrlCell,System.Int32)">
      <summary>
            【异步方法】设置跟随推荐接口
            有 使用消息配置卡券（cardCellData） 和 使用消息配置URL（urlCellData） 两种方式
            注意：cardCellData和urlCellData必须也只能选择一个，不可同时为空
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">卡券ID</param>
      <param name="cardCellData">使用消息配置卡券数据</param>
      <param name="urlCellData">使用消息配置URL数据</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_PayRechargeAsync(System.String,System.Int32,System.Int32)">
      <summary>
            【异步方法】充值券点接口
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="coinCount">需要充值的券点数目，1点=1元</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_Refund(System.String,System.String,System.Int32)">
      <summary>
            退款接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="orderId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_SelfConsumecellSet(System.String,System.String,System.Boolean,System.Int32)">
      <summary>
            设置自助核销接口
            注意：设置自助核销的card_id必须已经配置了门店，否则会报错。
            错误码，0为正常；43008为商户没有开通微信支付权限
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">卡券ID</param>
      <param name="isOpen">是否开启自助核销功能，填true/false</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_ShelfCreate(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.ShelfCreateData,System.Int32)">
      <summary>
            创建货架
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_SubmerChantBatchGetAsync(System.String,System.String,System.Int32,System.String,System.Int32)">
      <summary>
             【异步方法】批量拉取子商户信息接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginId">起始的子商户id，一个母商户公众号下唯一</param>
      <param name="limit">拉取的子商户的个数，最大值为100</param>
      <param name="status">json结构</param>
      <param name="timeOut">子商户审核状态，填入后，只会拉出当前状态的子商户</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_SelfConsumecellSetAsync(System.String,System.String,System.Boolean,System.Int32)">
      <summary>
            【异步方法】设置自助核销接口
            注意：设置自助核销的card_id必须已经配置了门店，否则会报错。
            错误码，0为正常；43008为商户没有开通微信支付权限
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">卡券ID</param>
      <param name="isOpen">是否开启自助核销功能，填true/false</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_SubmerChantGet(System.String,System.String,System.Int32)">
      <summary>
             拉取单个子商户信息接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="merchantId">子商户id，一个母商户公众号下唯一。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_ShelfCreateAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.ShelfCreateData,System.Int32)">
      <summary>
            【异步方法】创建货架
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_SubmerChantSubmit(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.InfoList,System.Int32)">
      <summary>
             创建子商户接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="info">json结构</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_SubmerChantGetAsync(System.String,System.String,System.Int32)">
      <summary>
             【异步方法】拉取单个子商户信息接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="merchantId">子商户id，一个母商户公众号下唯一。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_SubmerChantBatchGet(System.String,System.String,System.Int32,System.String,System.Int32)">
      <summary>
             批量拉取子商户信息接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginId">起始的子商户id，一个母商户公众号下唯一</param>
      <param name="limit">拉取的子商户的个数，最大值为100</param>
      <param name="status">json结构</param>
      <param name="timeOut">子商户审核状态，填入后，只会拉出当前状态的子商户</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_SubmerChantSubmitAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.InfoList,System.Int32)">
      <summary>
             【异步方法】创建子商户接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="info">json结构</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_SubmerChantUpdate(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.InfoList,System.Int32)">
      <summary>
             更新子商户接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="info">json结构</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_SubmerChantUpdateAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.InfoList,System.Int32)">
      <summary>
            【异步方法】 更新子商户接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="info">json结构</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UpdateMeetingTicket(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            更新会议门票接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">用户的门票唯一序列号</param>
      <param name="cardId">要更新门票序列号所述的card_id ， 生成券时use_custom_code 填写true 时必填。</param>
      <param name="zone">区域</param>
      <param name="entrance">入口</param>
      <param name="seatNumber">座位号</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UpdateUserAsync(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】 更新会员信息
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">卡券Code码。</param>
      <param name="cardId">卡券ID。</param>
      <param name="addBonus">需要变更的积分，扣除积分用“-“表示。</param>
      <param name="addBalance">需要变更的余额，扣除金额用“-”表示。单位为分。</param>
      <param name="backgroundPicUrl">用户卡片的背景图片</param>
      <param name="bonus">需要设置的积分全量值，传入的数值会直接显示，如果同时传入add_bonus和bonus,则前者无效。</param>
      <param name="balance">需要设置的余额全量值，传入的数值会直接显示，如果同时传入add_balance和balance,则前者无效。</param>
      <param name="recordBonus">商家自定义积分消耗记录，不超过14个汉字。</param>
      <param name="recordBalance">商家自定义金额消耗记录，不超过14个汉字。</param>
      <param name="customFieldValue1">创建时字段custom_field1定义类型的最新数值，限制为4个汉字，12字节。</param>
      <param name="customFieldValue2">创建时字段custom_field2定义类型的最新数值，限制为4个汉字，12字节。</param>
      <param name="customFieldValue3">创建时字段custom_field3定义类型的最新数值，限制为4个汉字，12字节。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UpdateGiftCardPage(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.GiftCardPageData,System.Int32)">
      <summary>
            修改-礼品卡货架信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UpdateMeetingTicketAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】更新会议门票接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">用户的门票唯一序列号</param>
      <param name="cardId">要更新门票序列号所述的card_id ， 生成券时use_custom_code 填写true 时必填。</param>
      <param name="zone">区域</param>
      <param name="entrance">入口</param>
      <param name="seatNumber">座位号</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UpdateUserBalance(System.String,System.String,System.String,System.Decimal,System.Int32)">
      <summary>
            更新红包金额
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">红包的序列号</param>
      <param name="cardId">自定义code 的卡券必填。非自定义code 可不填。</param>
      <param name="balance">红包余额</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UpdateGiftCardPageAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.GiftCardPageData,System.Int32)">
      <summary>
            【异步方法】修改-礼品卡货架信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UpdateUserBalanceAsync(System.String,System.String,System.String,System.Decimal,System.Int32)">
      <summary>
            【异步方法】更新红包金额
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">红包的序列号</param>
      <param name="cardId">自定义code 的卡券必填。非自定义code 可不填。</param>
      <param name="balance">红包余额</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UpdateUser(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
             更新会员信息
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="code">卡券Code码。</param>
      <param name="cardId">卡券ID。</param>
      <param name="addBonus">需要变更的积分，扣除积分用“-“表示。</param>
      <param name="addBalance">需要变更的余额，扣除金额用“-”表示。单位为分。</param>
      <param name="backgroundPicUrl">用户卡片的背景图片</param>
      <param name="bonus">需要设置的积分全量值，传入的数值会直接显示，如果同时传入add_bonus和bonus,则前者无效。</param>
      <param name="balance">需要设置的余额全量值，传入的数值会直接显示，如果同时传入add_balance和balance,则前者无效。</param>
      <param name="recordBonus">商家自定义积分消耗记录，不超过14个汉字。</param>
      <param name="recordBalance">商家自定义金额消耗记录，不超过14个汉字。</param>
      <param name="customFieldValue1">创建时字段custom_field1定义类型的最新数值，限制为4个汉字，12字节。</param>
      <param name="customFieldValue2">创建时字段custom_field2定义类型的最新数值，限制为4个汉字，12字节。</param>
      <param name="customFieldValue3">创建时字段custom_field3定义类型的最新数值，限制为4个汉字，12字节。</param>
      <param name="membershipNumber">会员号，wiki文档没有，经测算可以用，用于会员号设置错误后重新设置</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UploadWxaCodeAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】上传小程序代码
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="pageId"></param>
      <param name="wxaAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UpdateUserGiftCard(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.UpdateUserGiftCardData,System.Int32)">
      <summary>
            更新用户礼品卡信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_Close(System.String,System.UInt32,System.Nullable{System.UInt32},System.Int32)">
      <summary>
            关闭已群发文章评论（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UserinfoGet(System.String,System.String,System.String,System.Int32)">
      <summary>
            拉取会员信息接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">CardID</param>
      <param name="code">Code</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UpdateUserGiftCardAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Card.UpdateUserGiftCardData,System.Int32)">
      <summary>
            【异步方法】更新用户礼品卡信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_CloseAsync(System.String,System.UInt32,System.Nullable{System.UInt32},System.Int32)">
      <summary>
            【异步方法】关闭已群发文章评论（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UserinfoGetAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】拉取会员信息接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId">CardID</param>
      <param name="code">Code</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CardApi_UploadWxaCode(System.String,System.String,System.String,System.Int32)">
      <summary>
            上传小程序代码
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="pageId"></param>
      <param name="wxaAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_Delete(System.String,System.UInt32,System.Nullable{System.UInt32},System.UInt32,System.Int32)">
      <summary>
            删除评论（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="user_comment_id">用户评论id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_MarkElect(System.String,System.UInt32,System.Nullable{System.UInt32},System.UInt32,System.Int32)">
      <summary>
            将评论标记精选（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="user_comment_id">用户评论id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_DeleteAsync(System.String,System.UInt32,System.Nullable{System.UInt32},System.UInt32,System.Int32)">
      <summary>
            【异步方法】删除评论（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="user_comment_id">用户评论id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_OpenAsync(System.String,System.UInt32,System.Nullable{System.UInt32},System.Int32)">
      <summary>
            【异步方法】 打开已群发文章评论（新增接口）
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_List(System.String,System.UInt32,System.Nullable{System.UInt32},System.UInt32,System.UInt32,System.UInt32,System.Int32)">
      <summary>
            查看指定文章的评论数据（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="begin">起始位置</param>
      <param name="count">获取数目（&gt;=50会被拒绝）</param>
      <param name="type">type=0 普通评论+精选评论 type=1 普通评论 type=2 精选评论</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_MarkElectAsync(System.String,System.UInt32,System.Nullable{System.UInt32},System.UInt32,System.Int32)">
      <summary>
            【异步方法】将评论标记精选（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="user_comment_id">用户评论id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_ReplyAdd(System.String,System.UInt32,System.Nullable{System.UInt32},System.UInt32,System.String,System.Int32)">
      <summary>
            回复评论（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="user_comment_id">用户评论id</param>
      <param name="content">回复内容</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_ListAsync(System.String,System.UInt32,System.Nullable{System.UInt32},System.UInt32,System.UInt32,System.UInt32,System.Int32)">
      <summary>
            【异步方法】查看指定文章的评论数据（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="begin">起始位置</param>
      <param name="count">获取数目（&gt;=50会被拒绝）</param>
      <param name="type">type=0 普通评论+精选评论 type=1 普通评论 type=2 精选评论</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_Open(System.String,System.UInt32,System.Nullable{System.UInt32},System.Int32)">
      <summary>
            打开已群发文章评论（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_ReplyAddAsync(System.String,System.UInt32,System.Nullable{System.UInt32},System.UInt32,System.String,System.Int32)">
      <summary>
            【异步方法】回复评论（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="user_comment_id">用户评论id</param>
      <param name="content">回复内容</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_ReplyDelete(System.String,System.UInt32,System.Nullable{System.UInt32},System.UInt32,System.Int32)">
      <summary>
            删除回复（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="user_comment_id">用户评论id</param>
      <param name="content">回复内容</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_UnmarkElectAsync(System.String,System.UInt32,System.Nullable{System.UInt32},System.UInt32,System.Int32)">
      <summary>
            【异步方法】将评论取消精选（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="user_comment_id">用户评论id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_ReplyDeleteAsync(System.String,System.UInt32,System.Nullable{System.UInt32},System.UInt32,System.Int32)">
      <summary>
            【异步方法】删除回复（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="user_comment_id">用户评论id</param>
      <param name="content">回复内容</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommentApi_UnmarkElect(System.String,System.UInt32,System.Nullable{System.UInt32},System.UInt32,System.Int32)">
      <summary>
            将评论取消精选（新增接口）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msg_data_id">群发返回的msg_data_id</param>
      <param name="index">（非必填）多图文时，用来指定第几篇图文，从0开始，不带默认返回该msg_data_id的第一篇图文</param>
      <param name="user_comment_id">用户评论id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_CreateMenu(System.String,System.Object,System.Int32)">
      <summary>
            创建菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId。当为AppId时，如果AccessToken错误将自动获取一次。当为null时，获取当前注册的第一个AppId。</param>
      <param name="buttonData">菜单内容</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_CreateMenu01(System.String,System.Object,System.Int32)">
      <summary>
            创建菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId。当为AppId时，如果AccessToken错误将自动获取一次。当为null时，获取当前注册的第一个AppId。</param>
      <param name="buttonData">菜单内容</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_CreateMenu02(System.String,System.Object,System.Int32)">
      <summary>
            创建菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId。当为AppId时，如果AccessToken错误将自动获取一次。当为null时，获取当前注册的第一个AppId。</param>
      <param name="buttonData">菜单内容</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_CreateMenu03(System.String,System.Object,System.Int32)">
      <summary>
            创建菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId。当为AppId时，如果AccessToken错误将自动获取一次。当为null时，获取当前注册的第一个AppId。</param>
      <param name="buttonData">菜单内容</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_CreateMenu06(System.String,System.Object,System.Int32)">
      <summary>
            创建菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId。当为AppId时，如果AccessToken错误将自动获取一次。当为null时，获取当前注册的第一个AppId。</param>
      <param name="buttonData">菜单内容</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_CreateMenuConditional01(System.String,Senparc.Weixin.MP.Entities.Menu.ConditionalButtonGroup,System.Int32)">
      <summary>
            创建个性化菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId。当为AppId时，如果AccessToken错误将自动获取一次。当为null时，获取当前注册的第一个AppId。</param>
      <param name="buttonData">菜单内容</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_CreateMenu07(System.String,System.Object,System.Int32)">
      <summary>
            创建菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId。当为AppId时，如果AccessToken错误将自动获取一次。当为null时，获取当前注册的第一个AppId。</param>
      <param name="buttonData">菜单内容</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_CreateMenu04(System.String,System.Object,System.Int32)">
      <summary>
            创建菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId。当为AppId时，如果AccessToken错误将自动获取一次。当为null时，获取当前注册的第一个AppId。</param>
      <param name="buttonData">菜单内容</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_CreateMenuConditional02(System.String,Senparc.Weixin.MP.Entities.Menu.ConditionalButtonGroup,System.Int32)">
      <summary>
            创建个性化菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId。当为AppId时，如果AccessToken错误将自动获取一次。当为null时，获取当前注册的第一个AppId。</param>
      <param name="buttonData">菜单内容</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_CreateMenuConditional03(System.String,Senparc.Weixin.MP.Entities.Menu.ConditionalButtonGroup,System.Int32)">
      <summary>
            创建个性化菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId。当为AppId时，如果AccessToken错误将自动获取一次。当为null时，获取当前注册的第一个AppId。</param>
      <param name="buttonData">菜单内容</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_CreateMenuConditional(System.String,Senparc.Weixin.MP.Entities.Menu.ConditionalButtonGroup,System.Int32)">
      <summary>
            创建个性化菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId。当为AppId时，如果AccessToken错误将自动获取一次。当为null时，获取当前注册的第一个AppId。</param>
      <param name="buttonData">菜单内容</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_DeleteMenu(System.String)">
      <summary>
            删除菜单
            </summary>
      <param name="accessTokenOrAppId"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_CreateMenu05(System.String,System.Object,System.Int32)">
      <summary>
            创建菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId。当为AppId时，如果AccessToken错误将自动获取一次。当为null时，获取当前注册的第一个AppId。</param>
      <param name="buttonData">菜单内容</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_DeleteMenu03(System.String)">
      <summary>
            删除菜单
            </summary>
      <param name="accessTokenOrAppId"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_DeleteMenu01(System.String)">
      <summary>
            删除菜单
            </summary>
      <param name="accessTokenOrAppId"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_DeleteMenuConditional(System.String,System.String)">
      <summary>
            删除个性化菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="menuId">菜单Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_DeleteMenu02(System.String)">
      <summary>
            删除菜单
            </summary>
      <param name="accessTokenOrAppId"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_DeleteMenuConditional02(System.String,System.String)">
      <summary>
            删除个性化菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="menuId">菜单Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_DeleteMenuConditional01(System.String,System.String)">
      <summary>
            删除个性化菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="menuId">菜单Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCallBackIp01(System.String)">
      <summary>
            获取微信服务器的ip段
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCallBackIp02(System.String)">
      <summary>
            获取微信服务器的ip段
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCallBackIpAsync(System.String)">
      <summary>
            【异步方法】获取微信服务器的ip段
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCallBackIp03(System.String)">
      <summary>
            获取微信服务器的ip段
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_DeleteMenuConditional03(System.String,System.String)">
      <summary>
            删除个性化菜单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="menuId">菜单Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCallBackIpAsync01(System.String)">
      <summary>
            【异步方法】获取微信服务器的ip段
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCallBackIpAsync03(System.String)">
      <summary>
            【异步方法】获取微信服务器的ip段
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCallBackIpAsync02(System.String)">
      <summary>
            【异步方法】获取微信服务器的ip段
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCallBackIp(System.String)">
      <summary>
            获取微信服务器的ip段
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCurrentSelfMenuInfo(System.String,System.Int32)">
      <summary>
            获取自定义菜单配置接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCurrentSelfMenuInfo02(System.String,System.Int32)">
      <summary>
            获取自定义菜单配置接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCurrentSelfMenuInfo01(System.String,System.Int32)">
      <summary>
            获取自定义菜单配置接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCurrentSelfMenuInfo03(System.String,System.Int32)">
      <summary>
            获取自定义菜单配置接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetMenu(System.String)">
      <summary>
            获取当前菜单，如果菜单不存在，将返回null
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCurrentSelfMenuInfoAsync(System.String,System.Int32)">
      <summary>
            【异步方法】获取自定义菜单配置接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCurrentSelfMenuInfoAsync01(System.String,System.Int32)">
      <summary>
            【异步方法】获取自定义菜单配置接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetMenu01(System.String)">
      <summary>
            获取当前菜单，如果菜单不存在，将返回null
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetMenu03(System.String)">
      <summary>
            获取当前菜单，如果菜单不存在，将返回null
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetMenu02(System.String)">
      <summary>
            获取当前菜单，如果菜单不存在，将返回null
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetMenuFromJson02(System.String)">
      <summary>
            从JSON字符串获取菜单对象
            </summary>
      <param name="jsonString"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetMenuFromJson(System.String)">
      <summary>
            从JSON字符串获取菜单对象
            </summary>
      <param name="jsonString"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCurrentSelfMenuInfoAsync02(System.String,System.Int32)">
      <summary>
            【异步方法】获取自定义菜单配置接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetCurrentSelfMenuInfoAsync03(System.String,System.Int32)">
      <summary>
            【异步方法】获取自定义菜单配置接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetMenuFromJson01(System.String)">
      <summary>
            从JSON字符串获取菜单对象
            </summary>
      <param name="jsonString"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetMenuFromJson03(System.String)">
      <summary>
            从JSON字符串获取菜单对象
            </summary>
      <param name="jsonString"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetMenuFromJsonResult01(Senparc.Weixin.MP.GetMenuResultFull,Senparc.Weixin.MP.Entities.Menu.ButtonGroupBase)">
      <summary>
            根据微信返回的Json数据得到可用的GetMenuResult结果
            </summary>
      <param name="resultFull"></param>
      <param name="buttonGroupBase">ButtonGroupBase的衍生类型，可以为ButtonGroup或ConditionalButtonGroup。返回的GetMenuResult中的menu属性即为此示例。</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetMenuFromJsonResult02(Senparc.Weixin.MP.GetMenuResultFull,Senparc.Weixin.MP.Entities.Menu.ButtonGroupBase)">
      <summary>
            根据微信返回的Json数据得到可用的GetMenuResult结果
            </summary>
      <param name="resultFull"></param>
      <param name="buttonGroupBase">ButtonGroupBase的衍生类型，可以为ButtonGroup或ConditionalButtonGroup。返回的GetMenuResult中的menu属性即为此示例。</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetMenuFromJsonResult03(Senparc.Weixin.MP.GetMenuResultFull,Senparc.Weixin.MP.Entities.Menu.ButtonGroupBase)">
      <summary>
            根据微信返回的Json数据得到可用的GetMenuResult结果
            </summary>
      <param name="resultFull"></param>
      <param name="buttonGroupBase">ButtonGroupBase的衍生类型，可以为ButtonGroup或ConditionalButtonGroup。返回的GetMenuResult中的menu属性即为此示例。</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetMenuFromJsonResult(Senparc.Weixin.MP.GetMenuResultFull,Senparc.Weixin.MP.Entities.Menu.ButtonGroupBase)">
      <summary>
            根据微信返回的Json数据得到可用的GetMenuResult结果
            </summary>
      <param name="resultFull"></param>
      <param name="buttonGroupBase">ButtonGroupBase的衍生类型，可以为ButtonGroup或ConditionalButtonGroup。返回的GetMenuResult中的menu属性即为此示例。</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicket01(System.String,System.String,System.String)">
      <summary>
            获取调用微信JS接口的临时票据
            </summary>
      <param name="appId"></param>
      <param name="secret"></param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicketAsync(System.String,System.String,System.String)">
      <summary>
            【异步方法】获取调用微信JS接口的临时票据
            </summary>
      <param name="appId"></param>
      <param name="secret"></param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicket02(System.String,System.String,System.String)">
      <summary>
            获取调用微信JS接口的临时票据
            </summary>
      <param name="appId"></param>
      <param name="secret"></param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicketAsync01(System.String,System.String,System.String)">
      <summary>
            【异步方法】获取调用微信JS接口的临时票据
            </summary>
      <param name="appId"></param>
      <param name="secret"></param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicket03(System.String,System.String,System.String)">
      <summary>
            获取调用微信JS接口的临时票据
            </summary>
      <param name="appId"></param>
      <param name="secret"></param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicketAsync02(System.String,System.String,System.String)">
      <summary>
            【异步方法】获取调用微信JS接口的临时票据
            </summary>
      <param name="appId"></param>
      <param name="secret"></param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicket(System.String,System.String,System.String)">
      <summary>
            获取调用微信JS接口的临时票据
            </summary>
      <param name="appId"></param>
      <param name="secret"></param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicketByAccessToken02(System.String,System.String)">
      <summary>
            获取调用微信JS接口的临时票据
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicketByAccessTokenAsync01(System.String,System.String)">
      <summary>
            【异步方法】获取调用微信JS接口的临时票据
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicketByAccessToken03(System.String,System.String)">
      <summary>
            获取调用微信JS接口的临时票据
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicketByAccessTokenAsync(System.String,System.String)">
      <summary>
            【异步方法】获取调用微信JS接口的临时票据
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicketAsync03(System.String,System.String,System.String)">
      <summary>
            【异步方法】获取调用微信JS接口的临时票据
            </summary>
      <param name="appId"></param>
      <param name="secret"></param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetToken(System.String,System.String,System.String)">
      <summary>
            获取凭证接口
            </summary>
      <param name="grant_type">获取access_token填写client_credential</param>
      <param name="appid">第三方用户唯一凭证</param>
      <param name="secret">第三方用户唯一凭证密钥，既appsecret</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetToken03(System.String,System.String,System.String)">
      <summary>
            获取凭证接口
            </summary>
      <param name="grant_type">获取access_token填写client_credential</param>
      <param name="appid">第三方用户唯一凭证</param>
      <param name="secret">第三方用户唯一凭证密钥，既appsecret</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicketByAccessTokenAsync02(System.String,System.String)">
      <summary>
            【异步方法】获取调用微信JS接口的临时票据
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetToken01(System.String,System.String,System.String)">
      <summary>
            获取凭证接口
            </summary>
      <param name="grant_type">获取access_token填写client_credential</param>
      <param name="appid">第三方用户唯一凭证</param>
      <param name="secret">第三方用户唯一凭证密钥，既appsecret</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicketByAccessToken(System.String,System.String)">
      <summary>
            获取调用微信JS接口的临时票据
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicketByAccessTokenAsync03(System.String,System.String)">
      <summary>
            【异步方法】获取调用微信JS接口的临时票据
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTokenAsync(System.String,System.String,System.String)">
      <summary>
            【异步方法】获取凭证接口
            </summary>
      <param name="grant_type">获取access_token填写client_credential</param>
      <param name="appid">第三方用户唯一凭证</param>
      <param name="secret">第三方用户唯一凭证密钥，既appsecret</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetToken02(System.String,System.String,System.String)">
      <summary>
            获取凭证接口
            </summary>
      <param name="grant_type">获取access_token填写client_credential</param>
      <param name="appid">第三方用户唯一凭证</param>
      <param name="secret">第三方用户唯一凭证密钥，既appsecret</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTicketByAccessToken01(System.String,System.String)">
      <summary>
            获取调用微信JS接口的临时票据
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">默认为jsapi，当作为卡券接口使用时，应当为wx_card</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTokenAsync02(System.String,System.String,System.String)">
      <summary>
            【异步方法】获取凭证接口
            </summary>
      <param name="grant_type">获取access_token填写client_credential</param>
      <param name="appid">第三方用户唯一凭证</param>
      <param name="secret">第三方用户唯一凭证密钥，既appsecret</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTokenAsync01(System.String,System.String,System.String)">
      <summary>
            【异步方法】获取凭证接口
            </summary>
      <param name="grant_type">获取access_token填写client_credential</param>
      <param name="appid">第三方用户唯一凭证</param>
      <param name="secret">第三方用户唯一凭证密钥，既appsecret</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_GetTypingStatus(System.String,System.String,System.String,System.Int32)">
      <summary>
            客服输入状态
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="touser">普通用户（openid）</param>
      <param name="typingStatus">"Typing"：对用户下发“正在输入"状态 "CancelTyping"：取消对用户的”正在输入"状态</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_TryMatch01(System.String,System.String)">
      <summary>
            测试个性化菜单匹配结果
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="userId">可以是粉丝的OpenID，也可以是粉丝的微信号。</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendCardAsync(System.String,System.String,System.String,Senparc.Weixin.MP.AdvancedAPIs.CardExt,System.Int32)">
      <summary>
            【异步方法】发送卡券
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="cardId"></param>
      <param name="cardExt"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_TryMatch02(System.String,System.String)">
      <summary>
            测试个性化菜单匹配结果
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="userId">可以是粉丝的OpenID，也可以是粉丝的微信号。</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_GetTokenAsync03(System.String,System.String,System.String)">
      <summary>
            【异步方法】获取凭证接口
            </summary>
      <param name="grant_type">获取access_token填写client_credential</param>
      <param name="appid">第三方用户唯一凭证</param>
      <param name="secret">第三方用户唯一凭证密钥，既appsecret</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_GetTypingStatusAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】客服输入状态
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="touser">普通用户（openid）</param>
      <param name="typingStatus">"Typing"：对用户下发“正在输入"状态 "CancelTyping"：取消对用户的”正在输入"状态</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendImage(System.String,System.String,System.String,System.Int32,System.String)">
      <summary>
            发送图片消息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="mediaId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="kfAccount">客服</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_TryMatch03(System.String,System.String)">
      <summary>
            测试个性化菜单匹配结果
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="userId">可以是粉丝的OpenID，也可以是粉丝的微信号。</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CommonApi_TryMatch(System.String,System.String)">
      <summary>
            测试个性化菜单匹配结果
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="userId">可以是粉丝的OpenID，也可以是粉丝的微信号。</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendCard(System.String,System.String,System.String,Senparc.Weixin.MP.AdvancedAPIs.CardExt,System.Int32)">
      <summary>
            发送卡券
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="cardId"></param>
      <param name="cardExt"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendMenu(System.String,System.String,System.String,System.Collections.Generic.List{Senparc.Weixin.MP.AdvancedAPIs.SendMenuContent},System.String,System.Int32)">
      <summary>
            发送客户菜单消息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="openId">接受人员OPenid</param>
      <param name="head">标题</param>
      <param name="menuList">内容</param>
      <param name="tail">结尾内容</param>
      <param name="timeOut">超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendImageAsync(System.String,System.String,System.String,System.Int32,System.String)">
      <summary>
            【异步方法】发送图片消息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="mediaId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="kfAccount">客服</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendMusic(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
      <summary>
            发送音乐消息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="title">音乐标题（非必须）</param>
      <param name="description">音乐描述（非必须）</param>
      <param name="musicUrl">音乐链接</param>
      <param name="hqMusicUrl">高品质音乐链接，wifi环境优先使用该链接播放音乐</param>
      <param name="thumbMediaId">视频缩略图的媒体ID</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="kfAccount">客服</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendMenuAsync(System.String,System.String,System.String,System.Collections.Generic.List{Senparc.Weixin.MP.AdvancedAPIs.SendMenuContent},System.String,System.Int32)">
      <summary>
            【异步方法】发送客户菜单消息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="accessTokenOrAppId"></param>
      <param name="openId">接受人员OPenid</param>
      <param name="head">标题</param>
      <param name="menuList">内容</param>
      <param name="tail">结尾内容</param>
      <param name="timeOut">超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendMiniProgramPageAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】发送小程序卡片（要求小程序与公众号已关联）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="title">小程序卡片的标题</param>
      <param name="appid">小程序的appid，要求小程序的appid需要与公众号有关联关系</param>
      <param name="pagepath">小程序的页面路径，跟app.json对齐，支持参数，比如pages/index/index?foo=bar</param>
      <param name="thumb_media_id">小程序卡片图片的媒体ID，小程序卡片图片建议大小为520*416</param>
      <param name="kfAccount"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendNewsAsync(System.String,System.String,System.Collections.Generic.List{Senparc.NeuChar.Entities.Article},System.Int32,System.String)">
      <summary>
            【异步方法】发送图文消息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="articles"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="kfAccount">客服</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendMpNews(System.String,System.String,System.String,System.Int32,System.String)">
      <summary>
            发送图文消息（点击跳转到图文消息页面）
            图文消息条数限制在8条以内，注意，如果图文数超过8，则将会无响应。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="mediaId"></param>
      <param name="timeOut"></param>
      <param name="kfAccount">客服</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendMusicAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
      <summary>
            【异步方法】发送音乐消息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="title">音乐标题（非必须）</param>
      <param name="description">音乐描述（非必须）</param>
      <param name="musicUrl">音乐链接</param>
      <param name="hqMusicUrl">高品质音乐链接，wifi环境优先使用该链接播放音乐</param>
      <param name="thumbMediaId">视频缩略图的媒体ID</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="kfAccount">客服</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendText(System.String,System.String,System.String,System.Int32,System.String)">
      <summary>
            发送文本信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="content"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="kfAccount">客服</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendMiniProgramPage(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            发送小程序卡片（要求小程序与公众号已关联）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="title">小程序卡片的标题</param>
      <param name="appid">小程序的appid，要求小程序的appid需要与公众号有关联关系</param>
      <param name="pagepath">小程序的页面路径，跟app.json对齐，支持参数，比如pages/index/index?foo=bar</param>
      <param name="thumb_media_id">小程序卡片图片的媒体ID，小程序卡片图片建议大小为520*416</param>
      <param name="kfAccount"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendNews(System.String,System.String,System.Collections.Generic.List{Senparc.NeuChar.Entities.Article},System.Int32,System.String)">
      <summary>
            发送图文消息（点击跳转到外链）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="articles"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="kfAccount">客服</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendTextAsync(System.String,System.String,System.String,System.Int32,System.String)">
      <summary>
            【异步方法】发送文本信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="content"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="kfAccount">客服</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendMpNewsAsync(System.String,System.String,System.String,System.Int32,System.String)">
      <summary>
            【异步方法】发送图文消息（点击跳转到图文消息页面）
            图文消息条数限制在8条以内，注意，如果图文数超过8，则将会无响应。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="mediaId"></param>
      <param name="timeOut"></param>
      <param name="kfAccount">客服</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendVideo(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
      <summary>
            发送视频消息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="mediaId"></param>
      <param name="title"></param>
      <param name="description"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="kfAccount">客服</param>
      <param name="thumb_media_id"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendVoiceAsync(System.String,System.String,System.String,System.Int32,System.String)">
      <summary>
            【异步方法】发送语音消息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="mediaId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="kfAccount"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_CloseSession(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            关闭会话
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId">客户openid</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号</param>
      <param name="text">附加信息，文本会展示在客服人员的多客服客户端(非必须)</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_AddCustom(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            添加客服账号
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号，账号前缀最多10个字符，必须是英文或者数字字符。如果没有公众号微信号，请前往微信公众平台设置。</param>
      <param name="nickName">客服昵称，最长6个汉字或12个英文字符</param>
      <param name="passWord">客服账号登录密码，格式为密码明文的32位加密MD5值</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_CreateSessionAsync(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】创建会话
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId">客户openid</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号</param>
      <param name="text">附加信息，文本会展示在客服人员的多客服客户端(非必须)</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendVideoAsync(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
      <summary>
            【异步方法】发送视频消息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="mediaId"></param>
      <param name="title"></param>
      <param name="description"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="kfAccount">客服</param>
      <param name="thumb_media_id"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_AddCustomAsync(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】添加客服账号
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号，账号前缀最多10个字符，必须是英文或者数字字符。如果没有公众号微信号，请前往微信公众平台设置。</param>
      <param name="nickName">客服昵称，最长6个汉字或12个英文字符</param>
      <param name="passWord">客服账号登录密码，格式为密码明文的32位加密MD5值</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_DeleteCustom(System.String,System.String,System.Int32)">
      <summary>
            删除客服账号
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomApi_SendVoice(System.String,System.String,System.String,System.Int32,System.String)">
      <summary>
            发送语音消息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="mediaId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="kfAccount"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetCustomBasicInfo(System.String,System.Int32)">
      <summary>
            获取客服基本信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_CloseSessionAsync(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】关闭会话
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId">客户openid</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号</param>
      <param name="text">附加信息，文本会展示在客服人员的多客服客户端(非必须)</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_DeleteCustomAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】 删除客服账号
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetCustomBasicInfoAsync(System.String,System.Int32)">
      <summary>
            【异步方法】 获取客服基本信息
             </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetCustomOnlineInfoAsync(System.String,System.Int32)">
      <summary>
            【异步方法】获取在线客服接待信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetCustomOnlineInfo(System.String,System.Int32)">
      <summary>
            获取在线客服接待信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetRecord(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32)">
      <summary>
            获取用户聊天记录
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="startTime">查询开始时间，会自动转为UNIX时间戳</param>
      <param name="endTime">查询结束时间，会自动转为UNIX时间戳，每次查询不能跨日查询</param>
      <param name="pageSize">每页大小，每页最多拉取1000条</param>
      <param name="pageIndex">查询第几页，从1开始</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_CreateSession(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            创建会话
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId">客户openid</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号</param>
      <param name="text">附加信息，文本会展示在客服人员的多客服客户端(非必须)</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetMsgList(System.String,System.DateTime,System.DateTime,System.Int64,System.Int32,System.Int32)">
      <summary>
            获取聊天记录
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="startTime">起始时间，unix时间戳</param>
      <param name="endTime">结束时间，unix时间戳，每次查询时段不能超过24小时</param>
      <param name="msgId">消息id顺序从小到大，从1开始</param>
      <param name="number">每次获取条数，最多10000条</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetSessionListAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取客服的会话列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号，账号前缀最多10个字符，必须是英文或者数字字符。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetWaitCase(System.String,System.Int32)">
      <summary>
            获取未接入会话列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetSessionState(System.String,System.String,System.Int32)">
      <summary>
            获取客户的会话状态
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId">客户openid</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetMsgListAsync(System.String,System.DateTime,System.DateTime,System.Int64,System.Int32,System.Int32)">
      <summary>
            【异步方法】获取聊天记录
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="startTime">起始时间，unix时间戳</param>
      <param name="endTime">结束时间，unix时间戳，每次查询时段不能超过24小时</param>
      <param name="msgId">消息id顺序从小到大，从1开始</param>
      <param name="number">每次获取条数，最多10000条</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetRecordAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】获取用户聊天记录
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="startTime">查询开始时间，会自动转为UNIX时间戳</param>
      <param name="endTime">查询结束时间，会自动转为UNIX时间戳，每次查询不能跨日查询</param>
      <param name="pageSize">每页大小，每页最多拉取1000条</param>
      <param name="pageIndex">查询第几页，从1开始</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_InviteWorkerAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】邀请绑定客服帐号
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="kfAccount">完整客服帐号，格式为：帐号前缀@公众号微信号</param>
      <param name="inviteWx">接收绑定邀请的客服微信号</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetWaitCaseAsync(System.String,System.Int32)">
      <summary>
            【异步方法】获取未接入会话列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetSessionStateAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取客户的会话状态
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId">客户openid</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_GetSessionList(System.String,System.String,System.Int32)">
      <summary>
            获取客服的会话列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号，账号前缀最多10个字符，必须是英文或者数字字符。</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_UpdateCustom(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            修改客服账号
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号，账号前缀最多10个字符，必须是英文或者数字字符。如果没有公众号微信号，请前往微信公众平台设置。</param>
      <param name="nickName">客服昵称，最长6个汉字或12个英文字符</param>
      <param name="passWord">客服账号登录密码，格式为密码明文的32位加密MD5值</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_InviteWorker(System.String,System.String,System.String,System.Int32)">
      <summary>
            邀请绑定客服帐号
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="kfAccount">完整客服帐号，格式为：帐号前缀@公众号微信号</param>
      <param name="inviteWx">接收绑定邀请的客服微信号</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_UploadCustomHeadimg(System.String,System.String,System.String,System.Int32)">
      <summary>
            上传客服头像
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号</param>
      <param name="file">form-data中媒体文件标识，有filename、filelength、content-type等信息</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_UpdateCustomAsync(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】设置客服信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号，账号前缀最多10个字符，必须是英文或者数字字符。如果没有公众号微信号，请前往微信公众平台设置。</param>
      <param name="nickName">客服昵称，最长6个汉字或12个英文字符</param>
      <param name="passWord">客服账号登录密码，格式为密码明文的32位加密MD5值</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_CustomServiceApi_UploadCustomHeadimgAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】上传客服头像
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="kfAccount">完整客服账号，格式为：账号前缀@公众号微信号</param>
      <param name="file">form-data中媒体文件标识，有filename、filelength、content-type等信息</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ExpressApi_AddExpressAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.AddExpressData)">
      <summary>
            【异步方法】增加邮费模板
            </summary>
      <param name="accessToken"></param>
      <param name="addExpressData">增加邮费模板需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ExpressApi_DeleteExpress(System.String,System.Int32)">
      <summary>
            删除邮费模板
            </summary>
      <param name="accessToken"></param>
      <param name="templateId">邮费模板Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ExpressApi_GetAllExpress(System.String)">
      <summary>
            获取所有邮费模板
            </summary>
      <param name="accessToken"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ExpressApi_GetAllExpressAsync(System.String)">
      <summary>
            【异步方法】获取所有邮费模板
            </summary>
      <param name="accessToken"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ExpressApi_DeleteExpressAsync(System.String,System.Int32)">
      <summary>
            【异步方法】删除邮费模板
            </summary>
      <param name="accessToken"></param>
      <param name="templateId">邮费模板Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ExpressApi_GetByIdExpressAsync(System.String,System.Int32)">
      <summary>
            【异步方法】获取指定ID的邮费模板
            </summary>
      <param name="accessToken"></param>
      <param name="templateId">邮费模板Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ExpressApi_GetByIdExpress(System.String,System.Int32)">
      <summary>
            获取指定ID的邮费模板
            </summary>
      <param name="accessToken"></param>
      <param name="templateId">邮费模板Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ExpressApi_UpDateExpress(System.String,Senparc.Weixin.MP.AdvancedAPIs.UpDateExpressData)">
      <summary>
            修改邮费模板
            </summary>
      <param name="accessToken"></param>
      <param name="upDateExpressData">修改邮费模板需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ExpressApi_UpDateExpressAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.UpDateExpressData)">
      <summary>
            【异步方法】修改邮费模板
            </summary>
      <param name="accessToken"></param>
      <param name="upDateExpressData">修改邮费模板需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupApi_AddGroup(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.AddGroupData)">
      <summary>
            增加分组
            </summary>
      <param name="accessToken"></param>
      <param name="addGroupData">增加分组需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ExpressApi_AddExpress(System.String,Senparc.Weixin.MP.AdvancedAPIs.AddExpressData)">
      <summary>
            增加邮费模板
            </summary>
      <param name="accessToken"></param>
      <param name="addExpressData">增加邮费模板需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupApi_DeleteGroup(System.String,System.Int32)">
      <summary>
            删除分组
            </summary>
      <param name="accessToken"></param>
      <param name="groupId">分组Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupApi_AddGroupAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.AddGroupData)">
      <summary>
            【异步方法】增加分组
            </summary>
      <param name="accessToken"></param>
      <param name="addGroupData">增加分组需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupApi_DeleteGroupAsync(System.String,System.Int32)">
      <summary>
            【异步方法】删除分组
            </summary>
      <param name="accessToken"></param>
      <param name="groupId">分组Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupApi_GetAllGroupAsync(System.String)">
      <summary>
            【异步方法】获取所有分组
            </summary>
      <param name="accessToken"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupApi_ProductModGroup(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.ProductModGroup)">
      <summary>
            修改分组商品
            </summary>
      <param name="accessToken"></param>
      <param name="productModGroup">修改分组商品需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupApi_GetAllGroup(System.String)">
      <summary>
            获取所有分组
            </summary>
      <param name="accessToken"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupApi_ProductModGroupAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.ProductModGroup)">
      <summary>
            【异步方法】修改分组商品
            </summary>
      <param name="accessToken"></param>
      <param name="productModGroup">修改分组商品需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupApi_GetByIdGroup(System.String,System.Int32)">
      <summary>
            根据分组ID获取分组信息
            </summary>
      <param name="accessToken"></param>
      <param name="groupId">分组Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupApi_PropertyModGroupAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.PropertyModGroup)">
      <summary>
            【异步方法】修改分组属性
            </summary>
      <param name="accessToken"></param>
      <param name="propertyModGroup">修改分组属性需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_GetGroupMessageResult(System.String,System.String,System.Int32)">
      <summary>
            查询群发消息发送状态【订阅号与服务号认证后均可用】
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msgId">群发消息后返回的消息id</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupApi_PropertyModGroup(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.PropertyModGroup)">
      <summary>
            修改分组属性
            </summary>
      <param name="accessToken"></param>
      <param name="propertyModGroup">修改分组属性需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupApi_GetByIdGroupAsync(System.String,System.Int32)">
      <summary>
             【异步方法】根据分组ID获取分组信息
            </summary>
      <param name="accessToken"></param>
      <param name="groupId">分组Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_DeleteSendMessage(System.String,System.String,System.Nullable{System.Int32},System.Int32)">
      <summary>
            删除群发消息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msgId">发送出去的消息ID</param>
      <param name="articleIdx">（非必填）要删除的文章在图文消息中的位置，第一篇编号为1，该字段不填或填0会删除全部文章</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_GetSendSpeedAsync(System.String,System.Int32)">
      <summary>
            【异步方法】获取群发速度
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_GetGroupMessageResultAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】查询群发消息发送状态【订阅号与服务号认证后均可用】
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msgId">群发消息后返回的消息id</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_GetVideoMediaIdResult(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            获取视频群发用的MediaId
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId"></param>
      <param name="title"></param>
      <param name="description"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_SendGroupMessageByGroupId(System.String,System.String,System.String,Senparc.Weixin.MP.GroupMessageType,System.Boolean,System.Boolean,System.String,System.Int32)">
      <summary>
            根据[分组]进行群发【订阅号与服务号认证后均可用】
            
            请注意：
            1、该接口暂时仅提供给已微信认证的服务号
            2、虽然开发者使用高级群发接口的每日调用限制为100次，但是用户每月只能接收4条，请小心测试
            3、无论在公众平台网站上，还是使用接口群发，用户每月只能接收4条群发消息，多于4条的群发将对该用户发送失败。
            4、群发视频时需要先调用GetVideoMediaIdResult接口获取专用的MediaId然后进行群发
            
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="groupId">群发到的分组的group_id，参见用户管理中用户分组接口，若is_to_all值为true，可不填写group_id；如果groupId和tagId同时填写，优先使用groupId；groupId和tagId最多只能使用一个</param>
      <param name="value">群发媒体文件时传入mediaId,群发文本消息时传入content,群发卡券时传入cardId</param>
      <param name="type"></param>
      <param name="isToAll">用于设定是否向全部用户发送，值为true或false，选择true该消息群发给所有用户，选择false可根据group_id发送给指定群组的用户</param>
      <param name="sendIgnoreReprint">待群发的文章被判定为转载时，是否继续群发</param>
      <param name="clientmsgid">开发者侧群发msgid，长度限制64字节，如不填，则后台默认以群发范围和群发内容的摘要值做为clientmsgid</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_DeleteSendMessageAsync(System.String,System.String,System.Nullable{System.Int32},System.Int32)">
      <summary>
            【异步方法】删除群发消息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="msgId">发送出去的消息ID</param>
      <param name="articleIdx">（非必填）要删除的文章在图文消息中的位置，第一篇编号为1，该字段不填或填0会删除全部文章</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_GetSendSpeed(System.String,System.Int32)">
      <summary>
            获取群发速度
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_GetVideoMediaIdResultAsync(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取视频群发用的MediaId
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId"></param>
      <param name="title"></param>
      <param name="description"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_SendGroupMessagePreview(System.String,Senparc.Weixin.MP.GroupMessageType,System.String,System.String,System.String,System.Int32)">
      <summary>
            预览接口【订阅号与服务号认证后均可用】
            注意：openId与wxName两者任选其一，同时传入以wxName优先
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="value">群发媒体消息时为media_id，群发文本信息为content</param>
      <param name="type"></param>
      <param name="openId">接收消息用户对应该公众号的openid</param>
      <param name="wxName">接收消息用户的微信号</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_SendGroupMessageByGroupIdAsync(System.String,System.String,System.String,Senparc.Weixin.MP.GroupMessageType,System.Boolean,System.Boolean,System.String,System.Int32)">
      <summary>
            【异步方法】根据[分组]进行群发【订阅号与服务号认证后均可用】
            
            请注意：
            1、该接口暂时仅提供给已微信认证的服务号
            2、虽然开发者使用高级群发接口的每日调用限制为100次，但是用户每月只能接收4条，请小心测试
            3、无论在公众平台网站上，还是使用接口群发，用户每月只能接收4条群发消息，多于4条的群发将对该用户发送失败。
            4、群发视频时需要先调用GetVideoMediaIdResult接口获取专用的MediaId然后进行群发
            
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="groupId">群发到的分组的group_id，参见用户管理中用户分组接口，若is_to_all值为true，可不填写group_id；如果groupId和tagId同时填写，优先使用groupId；groupId和tagId最多只能使用一个</param>
      <param name="value">群发媒体文件时传入mediaId,群发文本消息时传入content,群发卡券时传入cardId</param>
      <param name="type"></param>
      <param name="isToAll">用于设定是否向全部用户发送，值为true或false，选择true该消息群发给所有用户，选择false可根据group_id发送给指定群组的用户</param>
      <param name="sendIgnoreReprint">待群发的文章被判定为转载时，是否继续群发</param>
      <param name="clientmsgid">开发者侧群发msgid，长度限制64字节，如不填，则后台默认以群发范围和群发内容的摘要值做为clientmsgid</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_SendGroupMessageByOpenIdAsync(System.String,Senparc.Weixin.MP.GroupMessageType,System.String,System.String,System.Int32,System.String[])">
      <summary>
            【异步方法】根据OpenId进行群发【订阅号不可用，服务号认证后可用】
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="value">群发媒体文件时传入mediaId,群发文本消息时传入content,群发卡券时传入cardId</param>
      <param name="type"></param>
      <param name="openIds">openId字符串数组</param>
      <param name="clientmsgid">开发者侧群发msgid，长度限制64字节，如不填，则后台默认以群发范围和群发内容的摘要值做为clientmsgid</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_SendVideoGroupMessageByOpenIdAsync(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String[])">
      <summary>
            【异步方法】根据OpenID列表群发视频消息【订阅号不可用，服务号认证后可用】
            注意：群发视频时需要先调用GetVideoMediaIdResult接口获取专用的MediaId然后进行群发
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="title"></param>
      <param name="mediaId"></param>
      <param name="clientmsgid">开发者侧群发msgid，长度限制64字节，如不填，则后台默认以群发范围和群发内容的摘要值做为clientmsgid</param>
      <param name="openIds">openId字符串数组</param>
      <param name="description"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_SendGroupMessageByOpenId(System.String,Senparc.Weixin.MP.GroupMessageType,System.String,System.String,System.Int32,System.String[])">
      <summary>
            根据OpenId进行群发【订阅号不可用，服务号认证后可用】
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="value">群发媒体文件时传入mediaId,群发文本消息时传入content,群发卡券时传入cardId</param>
      <param name="type"></param>
      <param name="openIds">openId字符串数组</param>
      <param name="clientmsgid">开发者侧群发msgid，长度限制64字节，如不填，则后台默认以群发范围和群发内容的摘要值做为clientmsgid</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_SendGroupMessagePreviewAsync(System.String,Senparc.Weixin.MP.GroupMessageType,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】预览接口【订阅号与服务号认证后均可用】
            注意：openId与wxName两者任选其一，同时传入以wxName优先
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="value">群发媒体消息时为media_id，群发文本信息为content</param>
      <param name="type"></param>
      <param name="openId">接收消息用户对应该公众号的openid</param>
      <param name="wxName">接收消息用户的微信号</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_SendGroupMessageByTagId(System.String,System.String,System.String,Senparc.Weixin.MP.GroupMessageType,System.Boolean,System.Boolean,System.String,System.Int32)">
      <summary>
            根据[标签]进行群发【订阅号与服务号认证后均可用】
            
            请注意：
            1、该接口暂时仅提供给已微信认证的服务号
            2、虽然开发者使用高级群发接口的每日调用限制为100次，但是用户每月只能接收4条，请小心测试
            3、无论在公众平台网站上，还是使用接口群发，用户每月只能接收4条群发消息，多于4条的群发将对该用户发送失败。
            4、群发视频时需要先调用GetVideoMediaIdResult接口获取专用的MediaId然后进行群发
            
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="tagId">群发到的标签的tag_id，若is_to_all值为true，可不填写tag_id</param>
      <param name="value">群发媒体文件时传入mediaId,群发文本消息时传入content,群发卡券时传入cardId</param>
      <param name="type"></param>
      <param name="isToAll">用于设定是否向全部用户发送，值为true或false，选择true该消息群发给所有用户，选择false可根据group_id发送给指定群组的用户</param>
      <param name="sendIgnoreReprint">待群发的文章被判定为转载时，是否继续群发</param>
      <param name="clientmsgid">开发者侧群发msgid，长度限制64字节，如不填，则后台默认以群发范围和群发内容的摘要值做为clientmsgid</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_SetSendSpeed(System.String,System.Int32,System.Int32)">
      <summary>
            设置群发速度
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="speed">群发速度的级别</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_SendVideoGroupMessageByOpenId(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String[])">
      <summary>
            根据OpenID列表群发视频消息【订阅号不可用，服务号认证后可用】
            注意：群发视频时需要先调用GetVideoMediaIdResult接口获取专用的MediaId然后进行群发
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="title"></param>
      <param name="mediaId"></param>
      <param name="clientmsgid">开发者侧群发msgid，长度限制64字节，如不填，则后台默认以群发范围和群发内容的摘要值做为clientmsgid</param>
      <param name="openIds">openId字符串数组</param>
      <param name="description"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_WxCardGroupMessagePreview(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            预览卡券接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId"></param>
      <param name="code"></param>
      <param name="openId"></param>
      <param name="wxName"></param>
      <param name="timestamp"></param>
      <param name="signature"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_SetSendSpeedAsync(System.String,System.Int32,System.Int32)">
      <summary>
            【异步方法】设置群发速度
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="speed">群发速度的级别</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_SendGroupMessageByTagIdAsync(System.String,System.String,System.String,Senparc.Weixin.MP.GroupMessageType,System.Boolean,System.Boolean,System.String,System.Int32)">
      <summary>
            【异步方法】根据[标签]进行群发【订阅号与服务号认证后均可用】
            
            请注意：
            1、该接口暂时仅提供给已微信认证的服务号
            2、虽然开发者使用高级群发接口的每日调用限制为100次，但是用户每月只能接收4条，请小心测试
            3、无论在公众平台网站上，还是使用接口群发，用户每月只能接收4条群发消息，多于4条的群发将对该用户发送失败。
            4、群发视频时需要先调用GetVideoMediaIdResult接口获取专用的MediaId然后进行群发
            
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="tagId">群发到的标签的tag_id，若is_to_all值为true，可不填写tag_id</param>
      <param name="value">群发媒体文件时传入mediaId,群发文本消息时传入content,群发卡券时传入cardId</param>
      <param name="type"></param>
      <param name="isToAll">用于设定是否向全部用户发送，值为true或false，选择true该消息群发给所有用户，选择false可根据group_id发送给指定群组的用户</param>
      <param name="sendIgnoreReprint">待群发的文章被判定为转载时，是否继续群发</param>
      <param name="clientmsgid">开发者侧群发msgid，长度限制64字节，如不填，则后台默认以群发范围和群发内容的摘要值做为clientmsgid</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_Delete(System.String,System.Int32,System.Int32)">
      <summary>
            删除分组
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="groupId">分组id</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupMessageApi_WxCardGroupMessagePreviewAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】预览卡券接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="cardId"></param>
      <param name="code"></param>
      <param name="openId"></param>
      <param name="wxName"></param>
      <param name="timestamp"></param>
      <param name="signature"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_GetAsync(System.String)">
      <summary>
            【异步方法】获取所有分组
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_BatchUpdateAsync(System.String,System.Int32,System.Int32,System.String[])">
      <summary>
            【异步方法】批量移动用户分组
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="toGroupId">分组id</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="openIds">用户唯一标识符openid的列表（size不能超过50）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_DeleteAsync(System.String,System.Int32,System.Int32)">
      <summary>
            删除分组
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="groupId">分组id</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_BatchUpdate(System.String,System.Int32,System.Int32,System.String[])">
      <summary>
            批量移动用户分组
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="toGroupId">分组id</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="openIds">用户唯一标识符openid的列表（size不能超过50）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_GetId(System.String,System.String,System.Int32)">
      <summary>
            获取用户分组
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_Create(System.String,System.String,System.Int32)">
      <summary>
            创建分组
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="name">分组名字（30个字符以内）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_MemberUpdate(System.String,System.String,System.Int32,System.Int32)">
      <summary>
            移动用户分组
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="toGroupId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_Get(System.String)">
      <summary>
            获取所有分组
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_GetIdAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取用户分组
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_CreateAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】创建分组
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="name">分组名字（30个字符以内）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_UpdateAsync(System.String,System.Int32,System.String,System.Int32)">
      <summary>
            【异步方法】修改分组名
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="id"></param>
      <param name="name">分组名字（30个字符以内）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_CreateBillCard(System.String,Senparc.Weixin.MP.AdvancedAPIs.InvoiceInfo,System.Int32)">
      <summary>
            创建财政电子票据接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="invoiceInfo"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_MemberUpdateAsync(System.String,System.String,System.Int32,System.Int32)">
      <summary>
            【异步方法】移动用户分组
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="toGroupId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_CreateCardAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.InvoiceInfo,System.Int32)">
      <summary>
            【异步方法】创建发票卡券模板
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="invoiceInfo"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_GroupsApi_Update(System.String,System.Int32,System.String,System.Int32)">
      <summary>
            修改分组名
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="id"></param>
      <param name="name">分组名字（30个字符以内）</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_CreateBillCardAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.InvoiceInfo,System.Int32)">
      <summary>
            【异步方法】创建财政电子票据接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="invoiceInfo"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_ClearOutInvoice(System.String,Senparc.Weixin.MP.AdvancedAPIs.ClearOutInvoiceData,System.Int32)">
      <summary>
            发票冲红
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="InvoiceInfo"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetAuthField(System.String,System.Int32)">
      <summary>
            查询授权页字段信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_CreateCard(System.String,Senparc.Weixin.MP.AdvancedAPIs.InvoiceInfo,System.Int32)">
      <summary>
            创建发票卡券模板
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="invoiceInfo"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetAuthFieldAsync(System.String,System.Int32)">
      <summary>
            【异步方法】查询授权页字段信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_ClearOutInvoiceAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.ClearOutInvoiceData,System.Int32)">
      <summary>
            【异步方法】发票冲红
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="InvoiceInfo"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetAuthData(System.String,System.String,System.String,System.Int32)">
      <summary>
            查询开票信息/查询授权完成状态
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="orderId"></param>
      <param name="s_appId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetAuthUrlAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.GetAuthUrlData,System.Int32)">
      <summary>
            【异步方法】获取授权页链接
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetAuthUrl(System.String,Senparc.Weixin.MP.AdvancedAPIs.GetAuthUrlData,System.Int32)">
      <summary>
            获取授权页链接
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetContact(System.String,System.Int32)">
      <summary>
            查询商户联系方式
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetInvoiceInfoAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】查询报销发票信息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="cardId"></param>
      <param name="encryptCode"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetAuthDataAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】查询开票信息/查询授权完成状态
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="orderId"></param>
      <param name="s_appId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetInvoiceListInfo(System.String,System.Collections.Generic.List{Senparc.Weixin.MP.AdvancedAPIs.InvoiceItem},System.Int32)">
      <summary>
            批量查询报销发票信息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="itemList"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetBillAuthUrl(System.String,Senparc.Weixin.MP.AdvancedAPIs.GetBillAuthUrlData,System.Int32)">
      <summary>
            获取授权页链接
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetContactAsync(System.String,System.Int32)">
      <summary>
            【异步方法】查询商户联系方式
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetInvoiceInfo(System.String,System.String,System.String,System.Int32)">
      <summary>
            查询报销发票信息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="cardId"></param>
      <param name="encryptCode"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetPayMch(System.String,System.Int32)">
      <summary>
            查询支付后开票信息接口/查询商户号与开票平台关联情况
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetInvoiceListInfoAsync(System.String,System.Collections.Generic.List{Senparc.Weixin.MP.AdvancedAPIs.InvoiceItem},System.Int32)">
      <summary>
            【异步方法】批量查询报销发票信息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="itemList"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetBillAuthUrlAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.GetBillAuthUrlData,System.Int32)">
      <summary>
            【异步方法】获取授权页链接
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetUserTitleUrl(System.String,Senparc.Weixin.MP.AdvancedAPIs.GetUserTitleUrlData,System.Int32)">
      <summary>
            将发票抬头信息录入到用户微信中
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_InsertBillAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.InsertCardToBagData,System.Int32)">
      <summary>
            【异步方法】将财政电子票据添加到用户微信卡包 
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="info"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetPayMchAsync(System.String,System.Int32)">
      <summary>
            【异步方法】查询支付后开票信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetPdfAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】查询已上传的PDF文件 
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="s_mediaId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetUserTitleUrlAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.GetUserTitleUrlData,System.Int32)">
      <summary>
            【异步方法】将发票抬头信息录入到用户微信中
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_InsertCardToBag(System.String,Senparc.Weixin.MP.AdvancedAPIs.InsertCardToBagData,System.Int32)">
      <summary>
            将电子发票卡券插入用户卡包 
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="info"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetSelectTitleUrl(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取用户抬头（方式一）:获取商户专属二维码，立在收银台
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="attach"></param>
      <param name="bizName"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetPdf(System.String,System.String,System.Int32)">
      <summary>
            查询已上传的PDF文件 
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="s_mediaId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_InsertBill(System.String,Senparc.Weixin.MP.AdvancedAPIs.InsertCardToBagData,System.Int32)">
      <summary>
            将财政电子票据添加到用户微信卡包 
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="info"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_InsertCardToBagAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.InsertCardToBagData,System.Int32)">
      <summary>
            【异步方法】将电子发票卡券插入用户卡包 
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="info"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_QueryInvoiceAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】查询已开发票
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="fpqqlsh"></param>
      <param name="nsrsbh"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_GetSelectTitleUrlAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取用户抬头（方式一）:获取商户专属二维码，立在收银台
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="attach"></param>
      <param name="bizName"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_MakeOutInvoice(System.String,Senparc.Weixin.MP.AdvancedAPIs.MakeOutInvoiceData,System.Int32)">
      <summary>
            开具蓝票
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="InvoiceInfo"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_ScanTitle(System.String,System.String,System.Int32)">
      <summary>
            获取用户抬头（方式二）:商户扫描用户的发票抬头二维码
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="scanText"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_RejectInsert(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            拒绝开票
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="s_pappId"></param>
      <param name="orderId"></param>
      <param name="reason"></param>
      <param name="url"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_SetAuthFieldAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.AuthFieldData,System.Int32)">
      <summary>
            【异步方法】设置授权页字段信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="authField"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_MakeOutInvoiceAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.MakeOutInvoiceData,System.Int32)">
      <summary>
            【异步方法】开具蓝票
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="InvoiceInfo"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_ScanTitleAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取用户抬头（方式二）:商户扫描用户的发票抬头二维码
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="scanText"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_SetContact(System.String,System.String,System.Int32)">
      <summary>
            设置商户联系方式
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="phone"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_RejectInsertAsync(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】拒绝开票
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="s_pappId"></param>
      <param name="orderId"></param>
      <param name="reason"></param>
      <param name="url"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_QueryInvoice(System.String,System.String,System.String,System.Int32)">
      <summary>
            查询已开发票
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="fpqqlsh"></param>
      <param name="nsrsbh"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_SetAuthField(System.String,Senparc.Weixin.MP.AdvancedAPIs.AuthFieldData,System.Int32)">
      <summary>
            设置授权页字段信息接口
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="authField"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_SetContactAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】设置商户联系方式
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="phone"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_SetPayMch(System.String,Senparc.Weixin.MP.AdvancedAPIs.PayMchInfoData,System.Int32)">
      <summary>
            设置支付后开票信息/关联商户号与开票平台
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="payMchInfo"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_UpdateInvoiceListStatus(System.String,System.String,Senparc.Weixin.MP.Reimburse_Status,System.Collections.Generic.List{Senparc.Weixin.MP.AdvancedAPIs.InvoiceItem},System.Int32)">
      <summary>
            报销方批量更新发票状态
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="openId"></param>
      <param name="reimburseStatus"></param>
      <param name="itemList"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_SetPdfAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】上传PDF 
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="file"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_UpdateInvoiceStatusAsync(System.String,System.String,System.String,Senparc.Weixin.MP.Reimburse_Status,System.Int32)">
      <summary>
            【异步方法】报销方更新发票状态
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="cardId"></param>
      <param name="encryptCode"></param>
      <param name="reimburseStatus"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_SetPayMchAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.PayMchInfoData,System.Int32)">
      <summary>
            【异步方法】设置支付后开票信息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="payMchInfo"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_UpdateStatus(System.String,System.String,System.String,Senparc.Weixin.MP.Reimburse_Status,System.Int32)">
      <summary>
            更新电子票据状态
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="cardId"></param>
      <param name="code"></param>
      <param name="reimburseStatus"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_UpdateInvoiceListStatusAsync(System.String,System.String,Senparc.Weixin.MP.Reimburse_Status,System.Collections.Generic.List{Senparc.Weixin.MP.AdvancedAPIs.InvoiceItem},System.Int32)">
      <summary>
            【异步方法】报销方批量更新发票状态
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="openId"></param>
      <param name="reimburseStatus"></param>
      <param name="itemList"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_SetUrl(System.String,System.Int32)">
      <summary>
            获取自身的开票平台识别码/获取财政局s_pappid
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_UpdateStatusAsync(System.String,System.String,System.String,Senparc.Weixin.MP.Reimburse_Status,System.Int32)">
      <summary>
            【异步方法】更新电子票据状态
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="cardId"></param>
      <param name="code"></param>
      <param name="reimburseStatus"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_SetPdf(System.String,System.String,System.Int32)">
      <summary>
            上传PDF 
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="file"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_SetUrlAsync(System.String,System.Int32)">
      <summary>
            【异步方法】获取自身的开票平台识别码
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_AddVoice(System.String,System.String,System.String,System.String,System.IO.Stream,System.Int32)">
      <summary>
            提交语音
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="format">文件格式 （只支持mp3，16k，单声道，最大1M）</param>
      <param name="voiceId">语音唯一标识</param>
      <param name="lang">语言，zh_CN 或 en_US，默认中文</param>
      <param name="fileStream">文件流</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetAsync01(System.String,System.String,System.String)">
      <summary>
            【异步方法】获取临时素材（原下载媒体文件），保存到指定文件夹
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId"></param>
      <param name="dir"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_DeleteForeverMediaAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】删除永久素材
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_AddVoiceAsync(System.String,System.String,System.String,System.String,System.IO.Stream,System.Int32)">
      <summary>
            【异步方法】提交语音
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="format">文件格式 （只支持mp3，16k，单声道，最大1M）</param>
      <param name="voiceId">语音唯一标识</param>
      <param name="lang">语言，zh_CN 或 en_US，默认中文</param>
      <param name="fileStream">文件流</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_Get01(System.String,System.String,System.String)">
      <summary>
            获取临时素材（原下载媒体文件），保存到指定文件夹
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId"></param>
      <param name="dir">储存目录</param>
      <returns>储存文件的完整路径</returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetForeverMedia(System.String,System.String,System.IO.Stream,System.Int32)">
      <summary>
            获取永久素材(除了图文、视频)
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId">要获取的素材的media_id</param>
      <param name="stream">写入文件流</param>
      <param name="timeOut"></param>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_InvoiceApi_UpdateInvoiceStatus(System.String,System.String,System.String,Senparc.Weixin.MP.Reimburse_Status,System.Int32)">
      <summary>
            报销方更新发票状态
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="cardId"></param>
      <param name="encryptCode"></param>
      <param name="reimburseStatus"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_DeleteForeverMedia(System.String,System.String,System.Int32)">
      <summary>
            删除永久素材
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetForeverNews(System.String,System.String,System.Int32)">
      <summary>
            获取永久图文素材
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetAsync(System.String,System.String,System.String)">
      <summary>
            【异步方法】获取临时素材（原下载媒体文件），保存到指定文件夹
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId"></param>
      <param name="dir"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetForeverVideoAsync(System.String,System.String,System.Int32)">
      <summary>
            获取永久视频素材
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="mediaId">要获取的素材的media_id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetForeverNewsAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取永久图文素材
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetMediaCount(System.String)">
      <summary>
            获取素材总数
            永久素材的总数，也会计算公众平台官网素材管理中的素材
            图片和图文消息素材（包括单图文和多图文）的总数上限为5000，其他素材的总数上限为1000
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetJssdk(System.String,System.String,System.IO.Stream,System.Int32)">
      <summary>
            附录：高清语音素材获取接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId"></param>
      <param name="stream"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetForeverVideo(System.String,System.String,System.Int32)">
      <summary>
            获取永久视频素材
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="mediaId">要获取的素材的media_id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetMediaCountAsync(System.String)">
      <summary>
            【异步方法】获取素材总数
            永久素材的总数，也会计算公众平台官网素材管理中的素材
            图片和图文消息素材（包括单图文和多图文）的总数上限为5000，其他素材的总数上限为1000
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetNewsMediaListAsync(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】获取图文素材列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="offset">从全部素材的该偏移位置开始返回，0表示从第一个素材 返回</param>
      <param name="count">返回素材的数量，取值在1到20之间</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetForeverMediaAsync(System.String,System.String,System.IO.Stream,System.Int32)">
      <summary>
            【异步方法】获取永久素材(除了图文、视频)
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId">要获取的素材的media_id</param>
      <param name="stream">写入文件流</param>
      <param name="timeOut"></param>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_QueryRecoResult(System.String,System.String,System.String,System.Int32)">
      <summary>
            获取语音识别结果
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="voiceId"></param>
      <param name="lang"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetOthersMediaList(System.String,Senparc.Weixin.MP.UploadMediaFileType,System.Int32,System.Int32,System.Int32)">
      <summary>
            获取图片、视频、语音素材列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">素材的类型，图片（image）、视频（video）、语音 （voice）</param>
      <param name="offset"></param>
      <param name="count"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_TranslateContentAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】微信翻译
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="Ifrom"></param>
      <param name="Ito"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetNewsMediaList(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            获取图文素材列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="offset">从全部素材的该偏移位置开始返回，0表示从第一个素材 返回</param>
      <param name="count">返回素材的数量，取值在1到20之间</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetJssdkAsync(System.String,System.String,System.IO.Stream,System.Int32)">
      <summary>
            【异步方法】附录：高清语音素材获取接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId"></param>
      <param name="stream"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_GetOthersMediaListAsync(System.String,Senparc.Weixin.MP.UploadMediaFileType,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】获取图片、视频、语音素材列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">素材的类型，图片（image）、视频（video）、语音 （voice）</param>
      <param name="offset"></param>
      <param name="count"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UpdateForeverNews(System.String,System.String,System.Nullable{System.Int32},Senparc.Weixin.MP.AdvancedAPIs.GroupMessage.NewsModel,System.Int32)">
      <summary>
            修改永久图文素材
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId">要修改的图文消息的id</param>
      <param name="index">要更新的文章在图文消息中的位置（多图文消息时，此字段才有意义），第一篇为0</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="news">图文素材</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_QueryRecoResultAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取语音识别结果
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="format"></param>
      <param name="voiceId"></param>
      <param name="lang"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UploadForeverMedia(System.String,System.String,System.Int32)">
      <summary>
            新增其他类型永久素材(图片（image）、语音（voice）和缩略图（thumb）)
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="file">上传文件的绝对路径</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UploadNews(System.String,System.Int32,Senparc.Weixin.MP.AdvancedAPIs.GroupMessage.NewsModel[])">
      <summary>
            新增永久图文素材
            </summary>
      <param name="accessTokenOrAppId">Token</param>
      <param name="news">图文消息组</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UploadForeverMediaAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】新增其他类型永久素材(图片（image）、语音（voice）和缩略图（thumb）)
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="file">文件路径</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UpdateForeverNewsAsync(System.String,System.String,System.Nullable{System.Int32},Senparc.Weixin.MP.AdvancedAPIs.GroupMessage.NewsModel,System.Int32)">
      <summary>
            【异步方法】修改永久图文素材
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="mediaId">要修改的图文消息的id</param>
      <param name="index">要更新的文章在图文消息中的位置（多图文消息时，此字段才有意义），第一篇为0</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="news">图文素材</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_TranslateContent(System.String,System.String,System.String,System.Int32)">
      <summary>
            微信翻译
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="Ifrom"></param>
      <param name="Ito"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UploadForeverVideoAsync(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】新增永久视频素材
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">媒体文件类型，分别有图片（image）、语音（voice）、视频（video）和缩略图（thumb）</param>
      <param name="file">文件路径</param>
      <param name="title"></param>
      <param name="introduction"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UploadTemporaryMediaAsync(System.String,Senparc.Weixin.MP.UploadMediaFileType,System.String,System.Int32)">
      <summary>
            【异步方法】新增临时素材（原上传媒体文件）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type"></param>
      <param name="file">上传文件的绝对路径</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UploadNewsAsync(System.String,System.Int32,Senparc.Weixin.MP.AdvancedAPIs.GroupMessage.NewsModel[])">
      <summary>
            【异步方法】新增永久图文素材
            </summary>
      <param name="accessTokenOrAppId">Token</param>
      <param name="news">图文消息组</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UploadForeverVideo(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            新增永久视频素材
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">媒体文件类型，分别有图片（image）、语音（voice）、视频（video）和缩略图（thumb）</param>
      <param name="title">素材的标题</param>
      <param name="introduction">素材的描述</param>
      <param name="file">上传文件的绝对路径</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_AddTemplate(System.String,System.String,System.Int32[],System.String,System.Int32)">
      <summary>
            从公共模板库中选用模板，到私有模板库中
            </summary>
      <param name="accessToken">接口调用凭证</param>
      <param name="tid">模板标题 id，可通过getPubTemplateTitleList接口获取，也可登录公众号后台查看获取</param>
      <param name="kidList">开发者自行组合好的模板关键词列表，关键词顺序可以自由搭配（例如 [3,5,4] 或 [4,5,3]），最多支持5个，最少2个关键词组合</param>
      <param name="sceneDesc">服务场景描述，15个字以内</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UploadImg(System.String,System.String,System.Int32)">
      <summary>
            上传图文消息内的图片获取URL
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="file">上传文件的绝对路径</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UploadTemporaryNews(System.String,System.Int32,Senparc.Weixin.MP.AdvancedAPIs.GroupMessage.NewsModel[])">
      <summary>
            上传临时图文消息素材（原上传图文消息素材）
            </summary>
      <param name="accessTokenOrAppId">Token</param>
      <param name="news">图文消息组</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UploadTemporaryMedia(System.String,Senparc.Weixin.MP.UploadMediaFileType,System.String,System.Int32)">
      <summary>
            新增临时素材（原上传媒体文件）
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="type">媒体文件类型</param>
      <param name="file">上传文件的绝对路径</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_BizSendAsync(System.String,System.String,System.String,Senparc.Weixin.Entities.TemplateMessage.TemplateMessageData,System.String,Senparc.Weixin.MP.AdvancedAPIs.TemplateMessage.TemplateModel_MiniProgram,System.Int32)">
      <summary>
            【异步方法】发送订阅通知
            </summary>
      <param name="accessTokenOrAppId">接口调用凭证</param>
      <param name="toUser">接收者（用户）的 openid</param>
      <param name="templateId">所需下发的订阅模板id</param>
      <param name="data">模板内容，格式形如 { "key1": { "value": any }, "key2": { "value": any } }</param>
      <param name="page">跳转网页时填写</param>
      <param name="miniProgram">	跳转小程序时填写</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UploadImgAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】上传图文消息内的图片获取URL
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="file"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_AddTemplateAsync(System.String,System.String,System.Int32[],System.String,System.Int32)">
      <summary>
            【异步方法】从公共模板库中选用模板，到私有模板库中
            </summary>
      <param name="accessToken">接口调用凭证</param>
      <param name="tid">模板标题 id，可通过getPubTemplateTitleList接口获取，也可登录公众号后台查看获取</param>
      <param name="kidList">开发者自行组合好的模板关键词列表，关键词顺序可以自由搭配（例如 [3,5,4] 或 [4,5,3]），最多支持5个，最少2个关键词组合</param>
      <param name="sceneDesc">服务场景描述，15个字以内</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_GetCategory(System.String,System.Int32)">
      <summary>
            获取公众号所属类目，可用于查询类目下的公共模板
            </summary>
      <param name="accessToken">接口调用凭证</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_DelTemplate(System.String,System.String,System.Int32)">
      <summary>
            删除私有模板库中的模板
            </summary>
      <param name="accessToken">接口调用凭证</param>
      <param name="priTmplId">要删除的模板id</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_GetPubTemplateKeyWordsByIdAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取公共模板下的关键词列表
            </summary>
      <param name="accessToken">接口调用凭证</param>
      <param name="tid">模板标题 id，可通过接口获取</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_MediaApi_UploadTemporaryNewsAsync(System.String,System.Int32,Senparc.Weixin.MP.AdvancedAPIs.GroupMessage.NewsModel[])">
      <summary>
            【异步方法】上传临时图文消息素材（原上传图文消息素材）
            </summary>
      <param name="accessTokenOrAppId">Token</param>
      <param name="news">图文消息组</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_GetCategoryAsync(System.String,System.Int32)">
      <summary>
            【异步方法】 获取公众号所属类目，可用于查询类目下的公共模板
             </summary>
      <param name="accessToken">接口调用凭证</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_BizSend(System.String,System.String,System.String,Senparc.Weixin.Entities.TemplateMessage.TemplateMessageData,System.String,Senparc.Weixin.MP.AdvancedAPIs.TemplateMessage.TemplateModel_MiniProgram,System.Int32)">
      <summary>
            发送订阅通知
            </summary>
      <param name="accessTokenOrAppId">接口调用凭证</param>
      <param name="toUser">接收者（用户）的 openid</param>
      <param name="templateId">所需下发的订阅模板id</param>
      <param name="data">模板内容，格式形如 { "key1": { "value": any }, "key2": { "value": any } }</param>
      <param name="page">跳转网页时填写</param>
      <param name="miniProgram">	跳转小程序时填写</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_DelTemplateAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】删除私有模板库中的模板
            </summary>
      <param name="accessToken">接口调用凭证</param>
      <param name="priTmplId">要删除的模板id</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_GetPubTemplateTitles(System.String,System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            获取类目下的公共模板，可从中选用模板使用
            </summary>
      <param name="accessToken">接口调用凭证</param>
      <param name="ids">类目 id，多个用逗号隔开</param>
      <param name="start">用于分页，表示从 start 开始。从 0 开始计数。</param>
      <param name="limit">用于分页，表示拉取 limit 条记录。最大为 30。</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_GetTemplateList(System.String,System.Int32)">
      <summary>
            获取私有的模板列表
            </summary>
      <param name="accessToken">接口调用凭证</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_GetPubTemplateKeyWordsById(System.String,System.String,System.Int32)">
      <summary>
            获取公共模板下的关键词列表
            </summary>
      <param name="accessToken">接口调用凭证</param>
      <param name="tid">模板标题 id，可通过接口获取</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OAuthApi_AuthAsync(System.String,System.String)">
      <summary>
            【异步方法】检验授权凭证（access_token）是否有效（OAuth专用）
            </summary>
      <param name="oauthAccessToken">调用接口凭证（OAuth专用）</param>
      <param name="openId">用户的唯一标识</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OAuthApi_GetAuthorizeUrl(System.String,System.String,System.String,Senparc.Weixin.MP.OAuthScope,System.String,System.Boolean)">
      <summary>
            获取验证地址
            </summary>
      <param name="appId">公众号的唯一标识</param>
      <param name="redirectUrl">授权后重定向的回调链接地址，请使用urlencode对链接进行处理</param>
      <param name="state">重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节</param>
      <param name="scope">应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且，即使在未关注的情况下，只要用户授权，也能获取其信息）</param>
      <param name="responseType">返回类型，请填写code（或保留默认）</param>
      <param name="addConnectRedirect">加上后可以解决40029-invalid code的问题（测试中）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OAuthApi_RefreshToken(System.String,System.String,System.String)">
      <summary>
            刷新（OAuth专用）access_token（如果需要）
            </summary>
      <param name="appId">公众号的唯一标识</param>
      <param name="refreshToken">填写通过access_token获取到的refresh_token参数</param>
      <param name="grantType">填写refresh_token</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_GetPubTemplateTitlesAsync(System.String,System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】获取类目下的公共模板，可从中选用模板使用
            </summary>
      <param name="accessToken">接口调用凭证</param>
      <param name="ids">类目 id，多个用逗号隔开</param>
      <param name="start">用于分页，表示从 start 开始。从 0 开始计数。</param>
      <param name="limit">用于分页，表示拉取 limit 条记录。最大为 30。</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_NewTmplApi_GetTemplateListAsync(System.String,System.Int32)">
      <summary>
            【异步方法】获取私有的模板列表
            </summary>
      <param name="accessToken">接口调用凭证</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OAuthApi_GetAccessToken(System.String,System.String,System.String,System.String)">
      <summary>
            获取AccessToken（OAuth专用）
            </summary>
      <param name="appId">公众号的唯一标识</param>
      <param name="secret">公众号的appsecret</param>
      <param name="code">code作为换取access_token的票据，每次用户授权带上的code将不一样，code只能使用一次，5分钟未被使用自动过期。</param>
      <param name="grantType">填写为authorization_code（请保持默认参数）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OAuthApi_GetUserInfo(System.String,System.String,Senparc.Weixin.Language)">
      <summary>
            获取用户基本信息
            </summary>
      <param name="oauthAccessToken">调用接口凭证（OAuth专用）</param>
      <param name="openId">普通用户的标识，对当前公众号唯一</param>
      <param name="lang">返回国家地区语言版本，zh_CN 简体，zh_TW 繁体，en 英语</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OAuthApi_GetAccessTokenAsync(System.String,System.String,System.String,System.String)">
      <summary>
            【异步方法】获取AccessToken（OAuth专用）
            </summary>
      <param name="appId"></param>
      <param name="secret"></param>
      <param name="code">code作为换取access_token的票据，每次用户授权带上的code将不一样，code只能使用一次，5分钟未被使用自动过期。</param>
      <param name="grantType"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OrderApi_CloseOrderAsync(System.String,System.String)">
      <summary>
            【异步方法】关闭订单
            </summary>
      <param name="accessToken"></param>
      <param name="orderId">订单ID</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OrderApi_GetByIdOrder(System.String,System.String)">
      <summary>
            根据订单ID获取订单详情
            </summary>
      <param name="accessToken"></param>
      <param name="orderId">订单Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OAuthApi_GetUserInfoAsync(System.String,System.String,Senparc.Weixin.Language)">
      <summary>
            【异步方法】 获取用户基本信息
             </summary>
      <param name="oauthAccessToken">调用接口凭证（OAuth专用）</param>
      <param name="openId">普通用户的标识，对当前公众号唯一</param>
      <param name="lang">返回国家地区语言版本，zh_CN 简体，zh_TW 繁体，en 英语</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OrderApi_GetByIdOrderAsync(System.String,System.String)">
      <summary>
            【异步方法】根据订单ID获取订单详情
            </summary>
      <param name="accessToken"></param>
      <param name="orderId">订单Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OrderApi_GetByFilterOrder(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
            根据订单状态/创建时间获取订单详情
            </summary>
      <param name="accessToken"></param>
      <param name="status">订单状态(不带该字段-全部状态, 2-待发货, 3-已发货, 5-已完成, 8-维权中, )</param>
      <param name="beginTime">订单创建时间起始时间(不带该字段则不按照时间做筛选)</param>
      <param name="endTime">订单创建时间终止时间(不带该字段则不按照时间做筛选)</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OAuthApi_Auth(System.String,System.String)">
      <summary>
            检验授权凭证（access_token）是否有效（OAuth专用）
            </summary>
      <param name="oauthAccessToken">调用接口凭证（OAuth专用）</param>
      <param name="openId">用户的唯一标识</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OrderApi_SetdeliveryOrder(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
            设置订单发货信息
            </summary>
      <param name="accessToken"></param>
      <param name="orderId">订单ID</param>
      <param name="deliveryCompany">物流公司ID(参考《物流公司ID》；当need_delivery为0时，可不填本字段；当need_delivery为1时，该字段不能为空；当need_delivery为1且is_others为1时，本字段填写其它物流公司名称)</param>
      <param name="deliveryTrackNo">运单ID(当need_delivery为0时，可不填本字段；当need_delivery为1时，该字段不能为空；)</param>
      <param name="needDelivery">商品是否需要物流(0-不需要，1-需要，无该字段默认为需要物流)</param>
      <param name="isOthers">是否为其它物流公司(0-否，1-是，无该字段默认为不是其它物流公司)</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OAuthApi_RefreshTokenAsync(System.String,System.String,System.String)">
      <summary>
            【异步方法】刷新（OAuth专用）access_token（如果需要）
             </summary>
      <param name="appId"></param>
      <param name="refreshToken">填写通过access_token获取到的refresh_token参数</param>
      <param name="grantType"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OrderApi_SetdeliveryOrderAsync(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
            【异步方法】设置订单发货信息
            </summary>
      <param name="accessToken"></param>
      <param name="orderId">订单ID</param>
      <param name="deliveryCompany">物流公司ID(参考《物流公司ID》；当need_delivery为0时，可不填本字段；当need_delivery为1时，该字段不能为空；当need_delivery为1且is_others为1时，本字段填写其它物流公司名称)</param>
      <param name="deliveryTrackNo">运单ID(当need_delivery为0时，可不填本字段；当need_delivery为1时，该字段不能为空；)</param>
      <param name="needDelivery">商品是否需要物流(0-不需要，1-需要，无该字段默认为需要物流)</param>
      <param name="isOthers">是否为其它物流公司(0-否，1-是，无该字段默认为不是其它物流公司)</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_AddPoi(System.String,Senparc.Weixin.MP.AdvancedAPIs.Poi.CreateStoreData,System.Int32)">
      <summary>
            创建门店
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="createStoreData"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OrderApi_CloseOrder(System.String,System.String)">
      <summary>
            关闭订单
            </summary>
      <param name="accessToken"></param>
      <param name="orderId">订单ID</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_AddPoiAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Poi.CreateStoreData,System.Int32)">
      <summary>
            【异步方法】创建门店
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="createStoreData"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_OrderApi_GetByFilterOrderAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
            【异步方法】根据订单状态/创建时间获取订单详情
            </summary>
      <param name="accessToken"></param>
      <param name="status">订单状态(不带该字段-全部状态, 2-待发货, 3-已发货, 5-已完成, 8-维权中, )</param>
      <param name="beginTime">订单创建时间起始时间(不带该字段则不按照时间做筛选)</param>
      <param name="endTime">订单创建时间终止时间(不带该字段则不按照时间做筛选)</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_DeletePoiAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】删除门店
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="poiId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_GetPoi(System.String,System.String,System.Int32)">
      <summary>
            查询门店信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="poiId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_DeletePoi(System.String,System.String,System.Int32)">
      <summary>
            删除门店
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="poiId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_UploadImage(System.String,System.String,System.Int32)">
      <summary>
            上传图片
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="file">文件路径</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_GetCategory(System.String)">
      <summary>
            获取门店类目表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_GetPoiListAsync(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】查询门店列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="begin">开始位置，0 即为从第一条开始查询</param>
      <param name="limit">返回数据条数，最大允许50，默认为20</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_GetPoiAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】查询门店信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="poiId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_UpdatePoi(System.String,Senparc.Weixin.MP.AdvancedAPIs.Poi.UpdateStoreData,System.Int32)">
      <summary>
            修改门店服务信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="updateStoreData">修改门店服务信息需要Post的数据</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_UploadImageAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】上传图片
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="file">文件路径</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_AddProductAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.AddProductData)">
      <summary>
            【异步方法】增加商品
            </summary>
      <param name="accessToken"></param>
      <param name="addProductData">提交到接口的数据（AddProductData）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_GetCategoryAsync(System.String)">
      <summary>
            【异步方法】获取门店类目表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_UpdatePoiAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Poi.UpdateStoreData,System.Int32)">
      <summary>
            【异步方法】修改门店服务信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="updateStoreData">修改门店服务信息需要Post的数据</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_PoiApi_GetPoiList(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            查询门店列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="begin">开始位置，0 即为从第一条开始查询</param>
      <param name="limit">返回数据条数，最大允许50，默认为20</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_DeleteProduct(System.String,System.String)">
      <summary>
            删除商品              
            </summary>
      <param name="accessToken"></param>
      <param name="productId">商品的Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_AddProduct(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.AddProductData)">
      <summary>
            增加商品
            </summary>
      <param name="accessToken"></param>
      <param name="addProductData">提交到接口的数据（AddProductData）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_GetProductAsync(System.String,System.String)">
      <summary>
            【异步方法】查询商品
            </summary>
      <param name="accessToken"></param>
      <param name="productId">商品的Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_GetByStatus(System.String,System.Int32)">
      <summary>
            获取指定状态的所有商品
            </summary>
      <param name="accessToken"></param>
      <param name="status">商品状态(0-全部, 1-上架, 2-下架)</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_GetSku(System.String,System.Int64)">
      <summary>
            获取指定子分类的所有SKU
            </summary>
      <param name="accessToken"></param>
      <param name="cateId">商品子分类ID</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_GetByStatusAsync(System.String,System.Int32)">
      <summary>
            【异步方法】获取指定状态的所有商品
            </summary>
      <param name="accessToken"></param>
      <param name="status">商品状态(0-全部, 1-上架, 2-下架)</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_DeleteProductAsync(System.String,System.String)">
      <summary>
            【异步方法】删除商品              
            </summary>
      <param name="accessToken"></param>
      <param name="productId">商品的Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_GetSkuAsync(System.String,System.Int64)">
      <summary>
            【异步方法】获取指定子分类的所有SKU
            </summary>
      <param name="accessToken"></param>
      <param name="cateId">商品子分类ID</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_GetSubAsync(System.String,System.Int64)">
      <summary>
            【异步方法】获取指定分类的所有子分类
            </summary>
      <param name="accessToken"></param>
      <param name="cateId">大分类ID(根节点分类id为1)</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_GetProduct(System.String,System.String)">
      <summary>
            查询商品
            </summary>
      <param name="accessToken"></param>
      <param name="productId">商品的Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_GetProperty(System.String,System.Int64)">
      <summary>
            获取指定分类的所有属性
            </summary>
      <param name="accessToken"></param>
      <param name="cateId">分类ID</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_ModProductStatus(System.String,System.Int32,System.String)">
      <summary>
            商品上下架
            </summary>
      <param name="accessToken"></param>
      <param name="status">商品上下架标识(0-下架, 1-上架)</param>
      <param name="productId">商品ID</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_QrCodeApi_CreateAsync(System.String,System.Int32,System.Int32,Senparc.Weixin.MP.QrCode_ActionName,System.String,System.Int32)">
      <summary>
            创建二维码
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="expireSeconds">临时二维码有效时间，以秒为单位。最大不超过2592000（即30天），此字段如果不填，则默认有效期为30秒,永久二维码将忽略此参数</param>
      <param name="sceneId">场景值ID，临时二维码时为32位非0整型，永久二维码时最大值为100000（目前参数只支持1--100000）</param>
      <param name="sceneStr">场景字符串，字符串类型，长度限制为1到64，仅actionName为QR_LIMIT_STR_SCENE或QR_STR_SCENE时有效</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="actionName">二维码类型，当actionName为QR_LIMIT_STR_SCENE或QR_STR_SCENE时，sceneId会被忽略</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_GetPropertyAsync(System.String,System.Int64)">
      <summary>
            【异步方法】获取指定分类的所有属性
            </summary>
      <param name="accessToken"></param>
      <param name="cateId">分类ID</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_UpDateProduct(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.UpdateProductData)">
      <summary>
            修改商品
            product_id表示要更新的商品的ID，其他字段说明请参考增加商品接口。
            从未上架的商品所有信息均可修改，否则商品的名称(name)、商品分类(category)、商品属性(property)这三个字段不可修改。
            </summary>
      <param name="accessToken"></param>
      <param name="reviseProduct">修改商品的信息</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_ModProductStatusAsync(System.String,System.Int32,System.String)">
      <summary>
            【异步方法】商品上下架
            </summary>
      <param name="accessToken"></param>
      <param name="status">商品上下架标识(0-下架, 1-上架)</param>
      <param name="productId">商品ID</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_MerchantInfoGet(System.String,System.Int32)">
      <summary>
            获取商户信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_GetQrCode(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
            获取商品二维码
            官方文档地址：<see href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1455872062" /></summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="keystr">商品编码内容</param>
      <param name="extinfo">（非必填）由商户自定义传入，建议仅使用大小写字母、数字及-_().*这6个常用字符</param>
      <param name="keystandard">商品编码标准</param>
      <param name="qrcode_size">二维码的尺寸（整型），数值代表边长像素数，默认为100</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_ModStatusAsync(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】提交审核/取消发布商品
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="keyStandard">商品编码标准。</param>
      <param name="keyStr">商品编码内容。</param>
      <param name="status">设置发布状态。on为提交审核，off为取消发布。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_MerchantInfoGetAsync(System.String,System.Int32)">
      <summary>
            【异步方法】获取商户信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_UpDateProductAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.UpdateProductData)">
      <summary>
            【异步方法】修改商品
            product_id表示要更新的商品的ID，其他字段说明请参考增加商品接口。
            从未上架的商品所有信息均可修改，否则商品的名称(name)、商品分类(category)、商品属性(property)这三个字段不可修改。
            </summary>
      <param name="accessToken"></param>
      <param name="reviseProduct">修改商品的信息</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_ProductClear(System.String,System.Int32,System.String,System.Int32)">
      <summary>
            清除商品信息
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="keyStandard">商品编码标准。</param>
      <param name="keyStr">商品编码标准。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_GetQrCodeAsync(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
            【异步方法】获取商品二维码
            官方文档地址：<see href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1455872062" /></summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="keystr">商品编码内容</param>
      <param name="extinfo">（非必填）由商户自定义传入，建议仅使用大小写字母、数字及-_().*这6个常用字符</param>
      <param name="keystandard">商品编码标准</param>
      <param name="qrcode_size">二维码的尺寸（整型），数值代表边长像素数，默认为100</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_ModStatus(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            提交审核/取消发布商品
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="keyStandard">商品编码标准。</param>
      <param name="keyStr">商品编码内容。</param>
      <param name="status">设置发布状态。on为提交审核，off为取消发布。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_ProductClearAsync(System.String,System.Int32,System.String,System.Int32)">
      <summary>
            【异步方法】清除商品信息
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="keyStandard">商品编码标准。</param>
      <param name="keyStr">商品编码标准。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_TestWhiteListSet(System.String,System.String,System.String,System.Int32)">
      <summary>
            设置测试人员白名单
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId">测试人员的openid列表。</param>
      <param name="userName">测试人员的微信号列表。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_ProductCreate(System.String,System.String,System.String,Senparc.Weixin.MP.AdvancedAPIs.Scan.BrandInfo,System.Int32)">
      <summary>
            创建商品
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <pram name="keyStandard">商品编码标准，暂时只支持ean13和ean8两种标准。</pram>
      <pram name="keyStr">商品编码内容。直接填写商品条码，如“6900000000000”；注意：编码标准是ean13时，编码内容必须在商户的号段之下，否则会报错。</pram>
      <pram name="baseInfo">商品的基本信息。</pram>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_QrCodeApi_Create(System.String,System.Int32,System.Int32,Senparc.Weixin.MP.QrCode_ActionName,System.String,System.Int32)">
      <summary>
            创建二维码
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="expireSeconds">临时二维码有效时间，以秒为单位。最大不超过2592000（即30天），此字段如果不填，则默认有效期为30秒,永久二维码将忽略此参数</param>
      <param name="sceneId">场景值ID，临时二维码时为32位非0整型，永久二维码时最大值为100000（目前参数只支持1--100000）</param>
      <param name="sceneStr">场景字符串，字符串类型，长度限制为1到64，仅actionName为QR_LIMIT_STR_SCENE或QR_STR_SCENE时有效</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <param name="actionName">二维码类型，当actionName为QR_LIMIT_STR_SCENE或QR_STR_SCENE时，sceneId会被忽略</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ProductApi_GetSub(System.String,System.Int64)">
      <summary>
            获取指定分类的所有子分类
            </summary>
      <param name="accessToken"></param>
      <param name="cateId">大分类ID(根节点分类id为1)</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_ProductGetListAsync(System.String,System.Int32,System.Int32,System.String,System.Int32)">
      <summary>
            【异步方法】批量查询商品信息
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="offset">商品编码标准。</param>
      <param name="limit">商品编码标准。</param>
      <param name="status">商品编码内容。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_ProductCreateAsync(System.String,System.String,System.String,Senparc.Weixin.MP.AdvancedAPIs.Scan.BrandInfo,System.Int32)">
      <summary>
            【异步方法】创建商品
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <pram name="keyStandard">商品编码标准，暂时只支持ean13和ean8两种标准。</pram>
      <pram name="keyStr">商品编码内容。直接填写商品条码，如“6900000000000”；注意：编码标准是ean13时，编码内容必须在商户的号段之下，否则会报错。</pram>
      <pram name="baseInfo">商品的基本信息。</pram>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_TestWhiteListSetAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】设置测试人员白名单
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId">测试人员的openid列表。</param>
      <param name="userName">测试人员的微信号列表。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_UpdateBrandAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.UpdateBrandData,System.Int32)">
      <summary>
            【异步方法】更新商品信息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_ScanTicketCheck(System.String,System.String,System.Int32)">
      <summary>
            检查wxticket参数
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="ticket">请求URL中带上的wxticket参数。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_UpdateBrand(System.String,Senparc.Weixin.MP.AdvancedAPIs.UpdateBrandData,System.Int32)">
      <summary>
            更新商品信息
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="data"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_ProductGetList(System.String,System.Int32,System.Int32,System.String,System.Int32)">
      <summary>
            批量查询商品信息
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="offset">商品编码标准。</param>
      <param name="limit">商品编码标准。</param>
      <param name="status">商品编码内容。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ScanApi_ScanTicketCheckAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】检查wxticket参数
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="ticket">请求URL中带上的wxticket参数。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_BindPageAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.DeviceApply_Data_Device_Identifiers,System.Int64[],Senparc.Weixin.MP.ShakeAroundBindType,Senparc.Weixin.MP.ShakeAroundAppendType,System.Int32)">
      <summary>
            【异步方法】配置设备与页面的关联关系
            配置设备与页面的关联关系。支持建立或解除关联关系，也支持新增页面或覆盖页面等操作。配置完成后，在此设备的信号范围内，即可摇出关联的页面信息。若设备配置多个页面，则随机出现页面信息。一个设备最多可配置30个关联页面。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="deviceIdentifier"></param>
      <param name="pageIds"></param>
      <param name="bindType">关联操作标志位， 0为解除关联关系，1为建立关联关系</param>
      <param name="appendType">新增操作标志位， 0为覆盖，1为新增</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeviceApply(System.String,System.Int32,System.String,System.String,System.Nullable{System.Int64},System.Int32)">
      <summary>
            申请设备ID
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="quantity">申请的设备ID的数量，单次新增设备超过500个，需走人工审核流程</param>
      <param name="applyReason">申请理由，不超过100个字</param>
      <param name="comment">备注，不超过15个汉字或30个英文字母</param>
      <param name="poiId">设备关联的门店ID，关联门店后，在门店1KM的范围内有优先摇出信息的机会。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_AddLotteryInfo(System.String,System.String,System.String,System.Int32,System.Int64,System.Int64,System.String,System.Int64,System.String,System.String,System.Int32)">
      <summary>
            创建红包活动
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="title">抽奖活动名称（选择使用模板时，也作为摇一摇消息主标题），最长6个汉字，12个英文字母。</param>
      <param name="desc">抽奖活动描述（选择使用模板时，也作为摇一摇消息副标题），最长7个汉字，14个英文字母。</param>
      <param name="onoff">抽奖开关。0关闭，1开启，默认为1</param>
      <param name="beginTime">	抽奖活动开始时间，unix时间戳，单位秒</param>
      <param name="expireTime">	抽奖活动结束时间，unix时间戳，单位秒,红包活动有效期最长为91天</param>
      <param name="sponsorAppid">红包提供商户公众号的appid，需与预下单中的公众账号appid（wxappid）一致</param>
      <param name="total">红包总数，红包总数是录入红包ticket总数的上限，因此红包总数应该大于等于预下单时红包ticket总数。</param>
      <param name="jumpUrl">红包关注界面后可以跳转到第三方自定义的页面</param>
      <param name="key">开发者自定义的key，用来生成活动抽奖接口的签名参数，长度32位。使用方式见sign生成规则</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeviceApplyAsync(System.String,System.Int32,System.String,System.String,System.Nullable{System.Int64},System.Int32)">
      <summary>
            【异步方法】申请设备ID
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="quantity">申请的设备ID的数量，单次新增设备超过500个，需走人工审核流程</param>
      <param name="applyReason">申请理由，不超过100个字</param>
      <param name="comment">备注，不超过15个汉字或30个英文字母</param>
      <param name="poiId">设备关联的门店ID，关联门店后，在门店1KM的范围内有优先摇出信息的机会。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_AddPage(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            新增页面
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="title">在摇一摇页面展示的主标题，不超过6个字</param>
      <param name="description">在摇一摇页面展示的副标题，不超过7个字</param>
      <param name="pageUrl">点击页面跳转链接</param>
      <param name="iconUrl">在摇一摇页面展示的图片。图片需先上传至微信侧服务器，用“素材管理-上传图片素材”接口上传图片，返回的图片URL再配置在此处</param>
      <param name="comment">页面的备注信息，不超过15个字</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeviceApplyStatusAsync(System.String,System.Int64,System.Int32)">
      <summary>
            【异步方法】查询设备ID申请审核状态
            接口说明 查询设备ID申请的审核状态。若单次申请的设备ID数量小于等于500个，系统会进行快速审核；若单次申请的设备ID数量大于500个，则在三个工作日内完成审核。
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="appId">批次ID，申请设备ID时所返回的批次ID</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeletePage(System.String,System.Int64,System.Int32)">
      <summary>
            删除页面
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="pageId">指定页面的Id数组</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeviceApplyStatus(System.String,System.Int64,System.Int32)">
      <summary>
            查询设备ID申请审核状态
            接口说明 查询设备ID申请的审核状态。若单次申请的设备ID数量小于等于500个，系统会进行快速审核；若单次申请的设备ID数量大于500个，则在三个工作日内完成审核。
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="appId">批次ID，申请设备ID时所返回的批次ID</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeviceBindLocatoin(System.String,System.Int64,System.String,System.Int64,System.Int64,System.Int64,System.Int32)">
      <summary>
            配置设备与其他门店的关联关系
            设备编号，若填了UUID、major、minor，则可不填设备编号，若二者都填，则以设备编号为优先
            UUID、major、minor，三个信息需填写完整，若填了设备编号，则可不填此信息。
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="deviceId">设备编号</param>
      <param name="uuid"></param>
      <param name="major"></param>
      <param name="minor"></param>
      <param name="poiId">Poi_id 的说明改为：设备关联的门店ID，关联门店后，在门店1KM的范围内有优先摇出信息的机会。</param>
      <param name="timeOut"></param>
      <param name="type">为1时，关联的门店和设备归属于同一公众账号；为2时，关联的门店为其他公众账号的门店。不填默认为1</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeviceListAsync(System.String,System.Int64,System.String,System.Int32)">
      <summary>
            【异步方法】批量查询设备统计数据接口
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="date">指定查询日期时间戳，单位为秒</param>
      <param name="pageIndex">指定查询的结果页序号；返回结果按摇周边人数降序排序，每50条记录为一页</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_AddPageAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】新增页面
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="title">在摇一摇页面展示的主标题，不超过6个字</param>
      <param name="description">在摇一摇页面展示的副标题，不超过7个字</param>
      <param name="pageUrl">点击页面跳转链接</param>
      <param name="iconUrl">在摇一摇页面展示的图片。图片需先上传至微信侧服务器，用“素材管理-上传图片素材”接口上传图片，返回的图片URL再配置在此处</param>
      <param name="comment">页面的备注信息，不超过15个字</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_AddLotteryInfoAsync(System.String,System.String,System.String,System.Int32,System.Int64,System.Int64,System.String,System.Int64,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】创建红包活动
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="title">抽奖活动名称（选择使用模板时，也作为摇一摇消息主标题），最长6个汉字，12个英文字母。</param>
      <param name="desc">抽奖活动描述（选择使用模板时，也作为摇一摇消息副标题），最长7个汉字，14个英文字母。</param>
      <param name="onoff">抽奖开关。0关闭，1开启，默认为1</param>
      <param name="beginTime">	抽奖活动开始时间，unix时间戳，单位秒</param>
      <param name="expireTime">	抽奖活动结束时间，unix时间戳，单位秒,红包活动有效期最长为91天</param>
      <param name="sponsorAppid">红包提供商户公众号的appid，需与预下单中的公众账号appid（wxappid）一致</param>
      <param name="total">红包总数，红包总数是录入红包ticket总数的上限，因此红包总数应该大于等于预下单时红包ticket总数。</param>
      <param name="jumpUrl">红包关注界面后可以跳转到第三方自定义的页面</param>
      <param name="key">开发者自定义的key，用来生成活动抽奖接口的签名参数，长度32位。使用方式见sign生成规则</param>
      <param name="timeOut">请求超时时间</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeletePageAsync(System.String,System.Int64,System.Int32)">
      <summary>
            【异步方法】删除页面
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="pageId">指定页面的Id数组</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeviceBindLocatoin01(System.String,System.Int64,System.String,System.Int64,System.Int64,System.Int64,System.Int32)">
      <summary>
            配置设备与其他门店的关联关系
            设备编号，若填了UUID、major、minor，则可不填设备编号，若二者都填，则以设备编号为优先
            UUID、major、minor，三个信息需填写完整，若填了设备编号，则可不填此信息。
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="deviceId">设备编号</param>
      <param name="uuid"></param>
      <param name="major"></param>
      <param name="minor"></param>
      <param name="poiId">Poi_id 的说明改为：设备关联的门店ID，关联门店后，在门店1KM的范围内有优先摇出信息的机会。</param>
      <param name="timeOut"></param>
      <param name="type">为1时，关联的门店和设备归属于同一公众账号；为2时，关联的门店为其他公众账号的门店。不填默认为1</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GetAuditStatus(System.String)">
      <summary>
            查询审核状态
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeviceBindLocatoinAsync(System.String,System.Int64,System.String,System.Int64,System.Int64,System.Int64,System.Int32)">
      <summary>
            【异步方法】配置设备与其他门店的关联关系
            设备编号，若填了UUID、major、minor，则可不填设备编号，若二者都填，则以设备编号为优先
            UUID、major、minor，三个信息需填写完整，若填了设备编号，则可不填此信息。
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="deviceId">设备编号</param>
      <param name="uuid"></param>
      <param name="major"></param>
      <param name="minor"></param>
      <param name="poiId">Poi_id 的说明改为：设备关联的门店ID，关联门店后，在门店1KM的范围内有优先摇出信息的机会。</param>
      <param name="timeOut"></param>
      <param name="type">为1时，关联的门店和设备归属于同一公众账号；为2时，关联的门店为其他公众账号的门店。不填默认为1</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_BindPage(System.String,Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.DeviceApply_Data_Device_Identifiers,System.Int64[],Senparc.Weixin.MP.ShakeAroundBindType,Senparc.Weixin.MP.ShakeAroundAppendType,System.Int32)">
      <summary>
            配置设备与页面的关联关系
            配置设备与页面的关联关系。支持建立或解除关联关系，也支持新增页面或覆盖页面等操作。配置完成后，在此设备的信号范围内，即可摇出关联的页面信息。若设备配置多个页面，则随机出现页面信息。一个设备最多可配置30个关联页面。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="deviceIdentifier"></param>
      <param name="pageIds"></param>
      <param name="bindType">关联操作标志位， 0为解除关联关系，1为建立关联关系</param>
      <param name="appendType">新增操作标志位， 0为覆盖，1为新增</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeviceUpdate(System.String,System.Int64,System.String,System.Int64,System.Int64,System.String,System.Int32)">
      <summary>
            编辑设备信息
            设备编号，若填了UUID、major、minor，则可不填设备编号，若二者都填，则以设备编号为优先
            UUID、major、minor，三个信息需填写完整，若填了设备编号，则可不填此信息。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="deviceId">设备编号</param>
      <param name="uuId"></param>
      <param name="major"></param>
      <param name="minor"></param>
      <param name="comment"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupDelete(System.String,System.String,System.Int32)">
      <summary>
            删除分组
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="groupId">分组唯一标识，全局唯一</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GetAuditStatusAsync(System.String)">
      <summary>
            【异步方法】查询审核状态
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupDeleteDeviceAsync(System.String,System.String,Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.DeviceApply_Data_Device_Identifiers,System.Int32)">
      <summary>
            【异步方法】从分组中移除设备
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="groupId">分组唯一标识，全局唯一</param>
      <param name="deviceIdentifier">分组列表的起始索引值</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GetShakeInfoAsync(System.String,System.String,System.Int32,System.Int32)">
      <summary>
            【异步方法】获取摇周边的设备及用户信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="ticket">摇周边业务的ticket，可在摇到的URL中得到，ticket生效时间为30分钟，每一次摇都会重新生成新的ticket</param>
      <param name="needPoi">是否需要返回门店poi_id，传1则返回，否则不返回</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeviceBindLocatoinAsync01(System.String,System.Int64,System.String,System.Int64,System.Int64,System.Int64,System.Int32)">
      <summary>
            【异步方法】配置设备与其他门店的关联关系
            设备编号，若填了UUID、major、minor，则可不填设备编号，若二者都填，则以设备编号为优先
            UUID、major、minor，三个信息需填写完整，若填了设备编号，则可不填此信息。
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="deviceId">设备编号</param>
      <param name="uuid"></param>
      <param name="major"></param>
      <param name="minor"></param>
      <param name="poiId">Poi_id 的说明改为：设备关联的门店ID，关联门店后，在门店1KM的范围内有优先摇出信息的机会。</param>
      <param name="timeOut"></param>
      <param name="type">为1时，关联的门店和设备归属于同一公众账号；为2时，关联的门店为其他公众账号的门店。不填默认为1</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeviceUpdateAsync(System.String,System.Int64,System.String,System.Int64,System.Int64,System.String,System.Int32)">
      <summary>
            【异步方法】编辑设备信息
            设备编号，若填了UUID、major、minor，则可不填设备编号，若二者都填，则以设备编号为优先
            UUID、major、minor，三个信息需填写完整，若填了设备编号，则可不填此信息。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="deviceId">设备编号</param>
      <param name="uuId"></param>
      <param name="major"></param>
      <param name="minor"></param>
      <param name="comment"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupGetAdddevice(System.String,System.String,System.Collections.Generic.List{Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.DeviceApply_Data_Device_Identifiers},System.Int32)">
      <summary>
            添加设备到分组
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="groupId">分组唯一标识，全局唯一</param>
      <param name="deviceIdentifier">分组列表的起始索引值</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GetShakeInfo(System.String,System.String,System.Int32,System.Int32)">
      <summary>
            获取摇周边的设备及用户信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="ticket">摇周边业务的ticket，可在摇到的URL中得到，ticket生效时间为30分钟，每一次摇都会重新生成新的ticket</param>
      <param name="needPoi">是否需要返回门店poi_id，传1则返回，否则不返回</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupDeleteAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】删除分组
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="groupId">分组唯一标识，全局唯一</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_DeviceList(System.String,System.Int64,System.String,System.Int32)">
      <summary>
            批量查询设备统计数据接口
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="date">指定查询日期时间戳，单位为秒</param>
      <param name="pageIndex">指定查询的结果页序号；返回结果按摇周边人数降序排序，每50条记录为一页</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupGetDetail(System.String,System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            查询分组详情
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="groupId">分组唯一标识，全局唯一</param>
      <param name="begin">分组列表的起始索引值</param>
      <param name="count">待查询的分组数量，不能超过1000个</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupGetAdddeviceAsync(System.String,System.String,System.Collections.Generic.List{Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.DeviceApply_Data_Device_Identifiers},System.Int32)">
      <summary>
            【异步方法】添加设备到分组
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="groupId">分组唯一标识，全局唯一</param>
      <param name="deviceIdentifiers">分组列表的起始索引值</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_PageList(System.String,System.Int64,System.Int32,System.Int32)">
      <summary>
            批量查询页面统计数据接口
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="date">指定查询日期时间戳，单位为秒</param>
      <param name="pageIndex">指定查询的结果页序号；返回结果按摇周边人数降序排序，每50条记录为一页</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupGetListAsync(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】查询分组列表
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="begin">分组列表的起始索引值</param>
      <param name="count">待查询的分组数量，不能超过1000个</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_QueryLotteryAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】红包查询接口
             </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="lotteryId">红包抽奖id，来自addlotteryinfo返回的lottery_id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupGetDetailAsync(System.String,System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】查询分组详情
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="groupId">分组唯一标识，全局唯一</param>
      <param name="begin">分组列表的起始索引值</param>
      <param name="count">待查询的分组数量，不能超过1000个</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupUpdate(System.String,System.String,System.String,System.Int32)">
      <summary>
            编辑分组信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="groupid">分组唯一标识，全局唯一</param>
      <param name="groupName">分组名称，不超过100汉字或200个英文字母</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupAdd(System.String,System.String,System.Int32)">
      <summary>
            新增分组
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="groupName">分组名称，不超过100汉字或200个英文字母</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_Register(System.String,Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.RegisterData,Senparc.Weixin.MP.IndustryId,System.Int32)">
      <summary>
            申请开通功能
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data"></param>
      <param name="industry_Id"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupDeleteDevice(System.String,System.String,Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.DeviceApply_Data_Device_Identifiers,System.Int32)">
      <summary>
            从分组中移除设备
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="groupId">分组唯一标识，全局唯一</param>
      <param name="deviceIdentifier">分组列表的起始索引值</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_PageListAsync(System.String,System.Int64,System.Int32,System.Int32)">
      <summary>
            【异步方法】批量查询页面统计数据接口
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="date">指定查询日期时间戳，单位为秒</param>
      <param name="pageIndex">指定查询的结果页序号；返回结果按摇周边人数降序排序，每50条记录为一页</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_RegisterAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.RegisterData,Senparc.Weixin.MP.IndustryId,System.Int32)">
      <summary>
            【异步方法】申请开通功能
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data"></param>
      <param name="industry_Id"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupAddAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】新增分组
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="groupName">分组名称，不超过100汉字或200个英文字母</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_RelationSearch(System.String,System.Int64,System.Int32,System.Int32,System.Int32)">
      <summary>
            查询页面的关联关系
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="pageId">指定的页面id</param>
      <param name="begin">关联关系列表的起始索引值</param>
      <param name="count">待查询的关联关系数量，不能超过50个</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupUpdateAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】编辑分组信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="groupid">分组唯一标识，全局唯一</param>
      <param name="groupName">分组名称，不超过100汉字或200个英文字母</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_GroupGetList(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            查询分组列表
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="begin">分组列表的起始索引值</param>
      <param name="count">待查询的分组数量，不能超过1000个</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_QueryLottery(System.String,System.String,System.Int32)">
      <summary>
            红包查询接口
             </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="lotteryId">红包抽奖id，来自addlotteryinfo返回的lottery_id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SearchDeviceById(System.String,System.Collections.Generic.List{Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.DeviceApply_Data_Device_Identifiers},System.Int32)">
      <summary>
            根据指定的设备Id查询设备列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="deviceIdentifiers">设备Id列表</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_RelationSearch01(System.String,System.Int64,System.Int32,System.Int32,System.Int32)">
      <summary>
            查询页面的关联关系
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="pageId">指定的页面id</param>
      <param name="begin">关联关系列表的起始索引值</param>
      <param name="count">待查询的关联关系数量，不能超过50个</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SearchDeviceByRangeAsync(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】根据分页查询或者指定范围查询设备列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="begin"></param>
      <param name="count"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SetLotterySwitchAsync(System.String,System.String,System.Int32,System.Int32)">
      <summary>
            【异步方法】设置红包活动抽奖开关
             </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="lotteryId">红包抽奖id，来自addlotteryinfo返回的lottery_id</param>
      <param name="onOff">活动抽奖开关，0：关闭，1：开启</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SearchPagesByPageId(System.String,System.Int64[],System.Int32)">
      <summary>
            根据页面Id查询页面列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="pageIds">指定页面的Id数组</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SearchDeviceByIdAsync(System.String,System.Collections.Generic.List{Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.DeviceApply_Data_Device_Identifiers},System.Int32)">
      <summary>
            根据指定的设备Id查询设备列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="deviceIdentifiers">设备Id列表</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SearchPagesByRange(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            根据分页或者指定范围查询页面列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="begin"></param>
      <param name="count"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SearchPagesByPageIdAsync(System.String,System.Int64[],System.Int32)">
      <summary>
            【异步方法】根据页面Id查询页面列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="pageIds">指定页面的Id数组</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_RelationSearchAsync(System.String,System.Int64,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】查询页面的关联关系
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="pageId">指定的页面id</param>
      <param name="begin">关联关系列表的起始索引值</param>
      <param name="count">待查询的关联关系数量，不能超过50个</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SetPrizeBucket(System.String,System.String,System.String,System.String,Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.PrizeInfoList,System.Int32)">
      <summary>
            录入红包信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="lotteryId">红包抽奖id，来自addlotteryinfo返回的lottery_id</param>
      <param name="mchid">红包提供者的商户号，，需与预下单中的商户号mch_id一致</param>
      <param name="sponsorAppid">红包提供商户公众号的appid，需与预下单中的公众账号appid（wxappid）一致</param>
      <param name="prizeInfoList">红包ticket列表，如果红包数较多，可以一次传入多个红包，批量调用该接口设置红包信息。每次请求传入的红包个数上限为100</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_StatisticsByDevice(System.String,Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.DeviceApply_Data_Device_Identifiers,System.Int64,System.Int64,System.Int32)">
      <summary>
            以设备为维度的数据统计接口
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="deviceIdentifier">指定页面的设备ID</param>
      <param name="beginDate">起始日期时间戳，最长时间跨度为30天</param>
      <param name="endDate">结束日期时间戳，最长时间跨度为30天</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_RelationSearchAsync01(System.String,System.Int64,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】查询页面的关联关系
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="pageId">指定的页面id</param>
      <param name="begin">关联关系列表的起始索引值</param>
      <param name="count">待查询的关联关系数量，不能超过50个</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_StatisticsByPageAsync(System.String,System.Int64,System.Int64,System.Int64,System.Int32)">
      <summary>
            【异步方法】以页面为维度的数据统计接口
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="pageId">指定页面的设备ID</param>
      <param name="beginDate">起始日期时间戳，最长时间跨度为30天</param>
      <param name="endDate">结束日期时间戳，最长时间跨度为30天</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SearchDeviceByRange(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            根据分页查询或者指定范围查询设备列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="lastSeen">前一次查询列表末尾的设备ID，第一次查询lastSeen为0</param>
      <param name="count">待查询的设备数量，不能超过50个</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SetPrizeBucketAsync(System.String,System.String,System.String,System.String,Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.PrizeInfoList,System.Int32)">
      <summary>
            【异步方法】录入红包信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="lotteryId">红包抽奖id，来自addlotteryinfo返回的lottery_id</param>
      <param name="mchid">红包提供者的商户号，，需与预下单中的商户号mch_id一致</param>
      <param name="sponsorAppid">红包提供商户公众号的appid，需与预下单中的公众账号appid（wxappid）一致</param>
      <param name="prizeInfoList">红包ticket列表，如果红包数较多，可以一次传入多个红包，批量调用该接口设置红包信息。每次请求传入的红包个数上限为100</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_UpdatePage(System.String,System.Int64,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            编辑页面信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="pageId">摇周边页面唯一ID</param>
      <param name="title">在摇一摇页面展示的主标题，不超过6个字</param>
      <param name="description">在摇一摇页面展示的副标题，不超过7个字</param>
      <param name="pageUrl">点击页面跳转链接</param>
      <param name="iconUrl">在摇一摇页面展示的图片。图片需先上传至微信侧服务器，用“素材管理-上传图片素材”接口上传图片，返回的图片URL再配置在此处</param>
      <param name="comment">页面的备注信息，不超过15个字</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_StatisticsByDeviceAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.ShakeAround.DeviceApply_Data_Device_Identifiers,System.Int64,System.Int64,System.Int32)">
      <summary>
            【异步方法】以设备为维度的数据统计接口
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="deviceIdentifier">指定页面的设备ID</param>
      <param name="beginDate">起始日期时间戳，最长时间跨度为30天</param>
      <param name="endDate">结束日期时间戳，最长时间跨度为30天</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SearchPagesByRangeAsync(System.String,System.Int64,System.Int32,System.Int32)">
      <summary>
            【异步方法】根据分页或者指定范围查询页面列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="lastSeen"></param>
      <param name="count"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_UploadImage(System.String,System.String,System.Int32)">
      <summary>
            上传图片素材
            上传在摇一摇页面展示的图片素材，素材保存在微信侧服务器上。 格式限定为：jpg,jpeg,png,gif，图片大小建议120px*120 px，限制不超过200 px *200 px，图片需为正方形。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="file"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SearchDeviceByApplyId(System.String,System.Int64,System.Int64,System.Int32,System.Int32)">
      <summary>
            根据批次ID查询设备列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="applyId">批次ID，申请设备ID时所返回的批次ID</param>
      <param name="lastSeen">前一次查询列表末尾的设备ID，第一次查询lastSeen为0</param>
      <param name="count">待查询的设备数量，不能超过50个</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SetLotterySwitch(System.String,System.String,System.Int32,System.Int32)">
      <summary>
            设置红包活动抽奖开关
             </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="lotteryId">红包抽奖id，来自addlotteryinfo返回的lottery_id</param>
      <param name="onOff">活动抽奖开关，0：关闭，1：开启</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShelfApi_AddShelvesAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M1,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M2,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M3,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M4,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M5,System.String,System.String)">
      <summary>
            【异步方法】增加货架
            </summary>
      <param name="accessToken"></param>
      <param name="m1">控件1数据</param>
      <param name="m2">控件2数据</param>
      <param name="m3">控件3数据</param>
      <param name="m4">控件4数据</param>
      <param name="m5">控件5数据</param>
      <param name="shelfBanner">货架招牌图片Url</param>
      <param name="shelfName">货架名称</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShelfApi_GetAllShelves(System.String)">
      <summary>
            获取所有货架
            </summary>
      <param name="accessToken"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_UploadImageAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】上传图片素材
            上传在摇一摇页面展示的图片素材，素材保存在微信侧服务器上。 格式限定为：jpg,jpeg,png,gif，图片大小建议120px*120 px，限制不超过200 px *200 px，图片需为正方形。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="file"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_UpdatePageAsync(System.String,System.Int64,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】编辑页面信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="pageId">摇周边页面唯一ID</param>
      <param name="title">在摇一摇页面展示的主标题，不超过6个字</param>
      <param name="description">在摇一摇页面展示的副标题，不超过7个字</param>
      <param name="pageUrl">点击页面跳转链接</param>
      <param name="iconUrl">在摇一摇页面展示的图片。图片需先上传至微信侧服务器，用“素材管理-上传图片素材”接口上传图片，返回的图片URL再配置在此处</param>
      <param name="comment">页面的备注信息，不超过15个字</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_StatisticsByPage(System.String,System.Int64,System.Int64,System.Int64,System.Int32)">
      <summary>
            以页面为维度的数据统计接口
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="pageId">指定页面的设备ID</param>
      <param name="beginDate">起始日期时间戳，最长时间跨度为30天</param>
      <param name="endDate">结束日期时间戳，最长时间跨度为30天</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShelfApi_DeleteShelves(System.String,System.Int32)">
      <summary>
            删除货架
            </summary>
      <param name="accessToken"></param>
      <param name="shelfId">货架Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShelfApi_GetAllShelvesAsync(System.String)">
      <summary>
            【异步方法】获取所有货架
            </summary>
      <param name="accessToken"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShakeAroundApi_SearchDeviceByApplyIdAsync(System.String,System.Int64,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】根据批次ID查询设备列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="applyId"></param>
      <param name="begin"></param>
      <param name="count"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_StockApi_AddStock(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.AddStockData)">
      <summary>
            增加库存
            </summary>
      <param name="accessToken"></param>
      <param name="addStockData">增加库存需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShelfApi_AddShelves(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M1,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M2,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M3,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M4,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M5,System.String,System.String)">
      <summary>
            增加货架
            </summary>
      <param name="accessToken"></param>
      <param name="m1">控件1数据</param>
      <param name="m2">控件2数据</param>
      <param name="m3">控件3数据</param>
      <param name="m4">控件4数据</param>
      <param name="m5">控件5数据</param>
      <param name="shelfBanner">货架招牌图片Url</param>
      <param name="shelfName">货架名称</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShelfApi_GetByIdShelvesAsync(System.String,System.Int32)">
      <summary>
            【异步方法】根据货架ID获取货架信息
            </summary>
      <param name="accessToken"></param>
      <param name="shelfId">货架Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShelfApi_GetByIdShelves(System.String,System.Int32)">
      <summary>
            根据货架ID获取货架信息
            </summary>
      <param name="accessToken"></param>
      <param name="shelfId">货架Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShelfApi_DeleteShelvesAsync(System.String,System.Int32)">
      <summary>
            【异步方法】删除货架
            </summary>
      <param name="accessToken"></param>
      <param name="shelfId">货架Id</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_StockApi_AddStockAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.AddStockData)">
      <summary>
            【异步方法】增加库存
            </summary>
      <param name="accessToken"></param>
      <param name="addStockData">增加库存需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShelfApi_ModShelves(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M1,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M2,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M3,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M4,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M5,System.Int32,System.String,System.String)">
      <summary>
            修改货架
            </summary>
      <param name="accessToken"></param>
      <param name="m1">控件1数据</param>
      <param name="m2">控件2数据</param>
      <param name="m3">控件3数据</param>
      <param name="m4">控件4数据</param>
      <param name="m5">控件5数据</param>
      <param name="shelfId">货架Id</param>
      <param name="shelfBanner">货架招牌图片Url</param>
      <param name="shelfName">货架名称</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_StockApi_ReduceStockAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.ReduceStockData)">
      <summary>
            【异步方法】减少库存
            </summary>
      <param name="accessToken"></param>
      <param name="reduceStockData">减少库存需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_DelPrivateTemplate(System.String,System.String,System.Int32)">
      <summary>
            删除模板
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="template_id">公众帐号下模板消息ID</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_GetIndustryAsync(System.String,System.Int32)">
      <summary>
            【异步方法】获取设置的行业信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_StockApi_ReduceStock(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.ReduceStockData)">
      <summary>
            减少库存
            </summary>
      <param name="accessToken"></param>
      <param name="reduceStockData">减少库存需要Post的数据</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_Addtemplate(System.String,System.String,System.Int32)">
      <summary>
            添加模板并获得模板ID
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="template_id_short">模板库中模板的编号，有“TM**”和“OPENTMTM**”等形式</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_DelPrivateTemplateAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】删除模板
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="template_id">公众帐号下模板消息ID</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_GetPrivateTemplate(System.String,System.Int32)">
      <summary>
            获取模板列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_ShelfApi_ModShelvesAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M1,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M2,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M3,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M4,Senparc.Weixin.MP.AdvancedAPIs.MerChant.M5,System.Int32,System.String,System.String)">
      <summary>
            【异步方法】修改货架
            </summary>
      <param name="accessToken"></param>
      <param name="m1">控件1数据</param>
      <param name="m2">控件2数据</param>
      <param name="m3">控件3数据</param>
      <param name="m4">控件4数据</param>
      <param name="m5">控件5数据</param>
      <param name="shelfId">货架Id</param>
      <param name="shelfBanner">货架招牌图片Url</param>
      <param name="shelfName">货架名称</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_GetIndustry(System.String,System.Int32)">
      <summary>
            获取设置的行业信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_GetSubscribeMsgUrl(System.String,System.Int32,System.String,System.String,System.String,System.String)">
      <summary>
            获取URL：一次性订阅消息，第一步引导用户打开链接进行授权
            文档地址：<see href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1500374289_66bvB" /></summary>
      <param name="appId">公众号的唯一标识</param>
      <param name="scene">重定向后会带上scene参数，开发者可以填0-10000的整形值，用来标识订阅场景值</param>
      <param name="templateId">订阅消息模板ID，登录公众平台后台，在接口权限列表处可查看订阅模板ID</param>
      <param name="redirectUrl">授权后重定向的回调地址，请使用UrlEncode对链接进行处理。注：要求redirect_url的域名要跟登记的业务域名一致，且业务域名不能带路径</param>
      <param name="reserved">（非必填）用于保持请求和回调的状态，授权请后原样带回给第三方。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数加session进行校验，开发者可以填写a-zA-Z0-9的参数值，最多128字节</param>
      <param name="action">直接填get_confirm即可，保留默认值</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_GetPrivateTemplateAsync(System.String,System.Int32)">
      <summary>
            【异步办法】 获取模板列表
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_SetIndustryAsync(System.String,Senparc.Weixin.MP.IndustryCode,Senparc.Weixin.MP.IndustryCode,System.Int32)">
      <summary>
            【异步方法】设置所属行业
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="industry_id1">公众号模板消息所属行业编号</param>
      <param name="industry_id2">公众号模板消息所属行业编号</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_AddtemplateAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获得模板ID
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="template_id_short">模板库中模板的编号，有“TM**”和“OPENTMTM**”等形式</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_SendTemplateMessage(System.String,System.String,Senparc.Weixin.Entities.TemplateMessage.ITemplateMessageBase,Senparc.Weixin.MP.AdvancedAPIs.TemplateMessage.TemplateModel_MiniProgram,System.Int32)">
      <summary>
            模板消息接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="templateMessageData"></param>
      <param name="miniProgram">跳小程序所需数据，不需跳小程序可不用传该数据</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_SendTemplateMessageAsync(System.String,System.String,Senparc.Weixin.Entities.TemplateMessage.ITemplateMessageBase,Senparc.Weixin.MP.AdvancedAPIs.TemplateMessage.TemplateModel_MiniProgram,System.Int32)">
      <summary>
            【异步方法】模板消息接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="miniProgram">跳小程序所需数据，不需跳小程序可不用传该数据</param>
      <param name="templateMessageData"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_Subscribe(System.String,System.String,System.String,System.String,System.String,System.Object,System.String,System.Int32)">
      <summary>
            通过API推送订阅模板消息给到授权微信用户
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="toUserOpenId">填接收消息的用户openid</param>
      <param name="templateId">订阅消息模板ID</param>
      <param name="scene">订阅场景值</param>
      <param name="title">消息标题，15字以内</param>
      <param name="data">消息正文，value为消息内容，color为颜色，200字以内</param>
      <param name="url">点击消息跳转的链接，需要有ICP备案</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_BatchBlackListAsync(System.String,System.Collections.Generic.List{System.String},System.Int32)">
      <summary>
            拉黑用户
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openidList">需要拉入黑名单的用户的openid，一次拉黑最多允许20个</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_SendTemplateMessage01(System.String,System.String,Senparc.Weixin.Entities.TemplateMessage.ITemplateMessageBase,Senparc.Weixin.MP.AdvancedAPIs.TemplateMessage.TemplateModel_MiniProgram,System.Int32)">
      <summary>
            模板消息接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="templateMessageData"></param>
      <param name="miniProgram">跳小程序所需数据，不需跳小程序可不用传该数据</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UrlApi_ShortUrl(System.String,System.String,System.String,System.Int32)">
      <summary>
            将一条长链接转成短链接。
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="action">此处填long2short，代表长链接转短链接</param>
      <param name="longUrl">需要转换的长链接，支持http://、https://、weixin://wxpay 格式的url</param>
      <param name="timeOut">请求超时时间</param>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_BatchUnBlackList(System.String,System.Collections.Generic.List{System.String},System.Int32)">
      <summary>
            取消拉黑用户
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="openidList"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_SendTemplateMessageAsync01(System.String,System.String,Senparc.Weixin.Entities.TemplateMessage.ITemplateMessageBase,Senparc.Weixin.MP.AdvancedAPIs.TemplateMessage.TemplateModel_MiniProgram,System.Int32)">
      <summary>
            【异步方法】模板消息接口
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openId"></param>
      <param name="miniProgram">跳小程序所需数据，不需跳小程序可不用传该数据</param>
      <param name="templateMessageData"></param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_BatchGetUserInfo(System.String,System.Collections.Generic.List{Senparc.Weixin.MP.AdvancedAPIs.User.BatchGetUserInfoData},System.Int32)">
      <summary>
            批量获取用户基本信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="userList"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_GetAsync(System.String,System.String)">
      <summary>
            【异步方法】获取关注者OpenId信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="nextOpenId"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_SubscribeAsync(System.String,System.String,System.String,System.String,System.String,System.Object,System.String,System.Int32)">
      <summary>
            【异步方法】通过API推送订阅模板消息给到授权微信用户
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="toUserOpenId">填接收消息的用户openid</param>
      <param name="templateId">订阅消息模板ID</param>
      <param name="scene">订阅场景值</param>
      <param name="title">消息标题，15字以内</param>
      <param name="data">消息正文，value为消息内容，color为颜色，200字以内</param>
      <param name="url">点击消息跳转的链接，需要有ICP备案</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UrlApi_ShortUrlAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            将一条长链接转成短链接。
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="action">此处填long2short，代表长链接转短链接</param>
      <param name="longUrl">需要转换的长链接，支持http://、https://、weixin://wxpay 格式的url</param>
      <param name="timeOut">请求超时时间</param>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_Info(System.String,System.String,Senparc.Weixin.Language)">
      <summary>
            获取用户信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="openId">普通用户的标识，对当前公众号唯一</param>
      <param name="lang">返回国家地区语言版本，zh_CN 简体，zh_TW 繁体，en 英语</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_BatchUnBlackListAsync(System.String,System.Collections.Generic.List{System.String},System.Int32)">
      <summary>
            取消拉黑用户
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="openidList">需要移除黑名单的用户的openid，一次移除最多允许20个</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_GetBlackList(System.String,System.String,System.Int32)">
      <summary>
            获取黑名单
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="beginOpenId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_TemplateApi_SetIndustry(System.String,Senparc.Weixin.MP.IndustryCode,Senparc.Weixin.MP.IndustryCode,System.Int32)">
      <summary>
            设置所属行业
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="industry_id1">公众号模板消息所属行业编号</param>
      <param name="industry_id2">公众号模板消息所属行业编号</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_BatchGetUserInfoAsync(System.String,System.Collections.Generic.List{Senparc.Weixin.MP.AdvancedAPIs.User.BatchGetUserInfoData},System.Int32)">
      <summary>
            【异步方法】批量获取用户基本信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="userList"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_GetBlackListAsync(System.String,System.String,System.Int32)">
      <summary>
            获取黑名单
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginOpenId">当 begin_openid 为空时，默认从开头拉取。</param>
      <param name="timeOut"></param>
      <returns>每次调用最多可拉取 10000 个OpenID</returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_InfoAsync(System.String,System.String,Senparc.Weixin.Language)">
      <summary>
            【异步方法】获取用户信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="openId">普通用户的标识，对当前公众号唯一</param>
      <param name="lang">返回国家地区语言版本，zh_CN 简体，zh_TW 繁体，en 英语</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_Get(System.String,System.String)">
      <summary>
            获取关注者OpenId信息 .
            一次拉取调用最多拉取10000个关注者的OpenID，可通过填写next_openid的值，从而多次拉取列表的方式来满足需求。
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="nextOpenId">第一个拉取的OPENID，不填默认从头开始拉取</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_BatchBlackList(System.String,System.Collections.Generic.List{System.String},System.Int32)">
      <summary>
            拉黑用户
            </summary>
      <param name="accessTokenOrAppId"></param>
      <param name="openidList"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_UpdateRemarkAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】修改关注者备注信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="openId">普通用户的标识，对当前公众号唯一</param>
      <param name="remark">新的备注名，长度必须小于30字符</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_Get(System.String,System.Int32,System.String,System.Int32)">
      <summary>
            获取标签下粉丝列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="tagid"></param>
      <param name="nextOpenid"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_Get01(System.String,System.Int32,System.String,System.Int32)">
      <summary>
            获取标签下粉丝列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="tagid"></param>
      <param name="nextOpenid"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_GetAsync01(System.String,System.Int32,System.String,System.Int32)">
      <summary>
            【异步方法】获取标签下粉丝列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="tagid"></param>
      <param name="nextOpenid"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserApi_UpdateRemark(System.String,System.String,System.String,System.Int32)">
      <summary>
            修改关注者备注信息
            </summary>
      <param name="accessTokenOrAppId">调用接口凭证</param>
      <param name="openId">普通用户的标识，对当前公众号唯一</param>
      <param name="remark">新的备注名，长度必须小于30字符</param>
      <param name="timeOut">代理请求超时时间（毫秒）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_BatchUntagging(System.String,System.Int32,System.Collections.Generic.List{System.String},System.Int32)">
      <summary>
            批量为用户取消标签
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="tagid"></param>
      <param name="openid_list"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_Update(System.String,System.Int32,System.String,System.Int32)">
      <summary>
            编辑标签
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="id"></param>
      <param name="name"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_BatchTagging(System.String,System.Int32,System.Collections.Generic.List{System.String},System.Int32)">
      <summary>
            批量为用户打标签
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="tagid"></param>
      <param name="openid_list"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_CreateAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】创建标签
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="name"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_UpdateAsync(System.String,System.Int32,System.String,System.Int32)">
      <summary>
            【异步方法】编辑标签
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="id"></param>
      <param name="name"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_GetAsync(System.String,System.Int32,System.String,System.Int32)">
      <summary>
            【异步方法】获取标签下粉丝列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="tagid"></param>
      <param name="nextOpenid"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_UserTagList(System.String,System.String,System.Int32)">
      <summary>
            获取用户身上的标签列表
            </summary>
      <param name="accessTokenOrAppid"></param>
      <param name="openid"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_Delete(System.String,System.Int32,System.Int32)">
      <summary>
            删除标签
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="id"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_AddDeviceAsync(System.String,System.Int64,System.String,System.String,System.Int32)">
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_BatchUntaggingAsync(System.String,System.Int32,System.Collections.Generic.List{System.String},System.Int32)">
      <summary>
            【异步方法】批量为用户取消标签
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="tagid"></param>
      <param name="openid_list"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_UserTagListAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】获取用户身上的标签列表
            </summary>
      <param name="accessTokenOrAppid"></param>
      <param name="openid"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_BatchTaggingAsync(System.String,System.Int32,System.Collections.Generic.List{System.String},System.Int32)">
      <summary>
            【异步方法】批量为用户打标签
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="tagid"></param>
      <param name="openid_list"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_DeleteDevice(System.String,System.String,System.Int32)">
      <summary>
            删除设备
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="bssid">需要删除的无线网络设备无线mac地址，格式冒号分隔，字符长度17个，并且字母小写，例如：00:1f:7a:ad:5c:a8</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_GetConnectUrl(System.String)">
      <summary>
            获取公众号连网URL
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_DeleteAsync(System.String,System.Int32,System.Int32)">
      <summary>
            【异步方法】删除标签
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="id"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_UserTagApi_Create(System.String,System.String,System.Int32)">
      <summary>
            创建标签
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="name"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_AddDevice(System.String,System.Int64,System.String,System.String,System.Int32)">
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_GetQrcodeAsync(System.String,System.Int64,System.Int32,System.Int32)">
      <summary>
            【异步方法】获取物料二维码
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId"></param>
      <param name="imgId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_GetCouponPutAsync(System.String,System.Int64,System.Int32)">
      <summary>
            【异步方法】查询门店卡券投放信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID，可设置为0，表示所有门店</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_DeleteDeviceAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】删除设备
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="bssid">需要删除的无线网络设备无线mac地址，格式冒号分隔，字符长度17个，并且字母小写，例如：00:1f:7a:ad:5c:a8</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_GetConnectUrlAsync(System.String)">
      <summary>
            【异步方法】 获取公众号连网URL
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_SetBarAsync(System.String,System.Int64,System.Int32,System.Int32)">
      <summary>
            【异步方法】 设置微信首页欢迎语
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="barType">微信首页欢迎语的文本内容：0--欢迎光临+公众号名称；1--欢迎光临+门店名称；2--已连接+公众号名称+WiFi；3--已连接+门店名称+Wi-Fi。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_OpenPluginToken(System.String,System.String,System.Int32)">
      <summary>
            第三方平台获取开插件wifi_token
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="callBackUrl">回调URL，开通插件成功后的跳转页面。注：该参数域名必须与跳转进开通插件页面的页面域名保持一致，建议均采用第三方平台域名。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_GetCouponPut(System.String,System.Int64,System.Int32)">
      <summary>
            查询门店卡券投放信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID，可设置为0，表示所有门店</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_SetCouponPut(System.String,System.Int64,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
            设置门店卡券投放信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID，可设置为0，表示所有门店</param>
      <param name="cardId">卡券ID</param>
      <param name="cardDescribe">卡券描述，不能超过18个字符</param>
      <param name="starTime">卡券投放开始时间（单位是秒）</param>
      <param name="endTime">卡券投放结束时间（单位是秒）注：不能超过卡券的有效期时间</param>
      <param name="cardQuantity">卡券库存</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_SetFinishpage(System.String,System.Int64,System.String,System.Int32)">
      <summary>
            设置连网完成页
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="finishPageUrl">连网完成页URL。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_GetStatistics(System.String,System.String,System.String,System.Int64,System.Int32)">
      <summary>
            数据统计
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">起始日期时间，格式yyyy-mm-dd，最长时间跨度为30天</param>
      <param name="endDate">结束日期时间戳，格式yyyy-mm-dd，最长时间跨度为30天</param>
      <param name="shopId">按门店ID搜索，-1为总统计</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_GetDeviceList(System.String,System.Int32,System.Int32,System.Nullable{System.Int64},System.Int32)">
      <summary>
            查询设备
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="pageIndex">分页下标，默认从1开始</param>
      <param name="pageSize">每页的个数，默认10个，最大20个</param>
      <param name="shopId">根据门店id查询</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_GetHomePage(System.String,System.Int64,System.Int32)">
      <summary>
            查询商家主页
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">查询的门店id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_SetFinishpageAsync(System.String,System.Int64,System.String,System.Int32)">
      <summary>
            【异步方法】 设置连网完成页
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="finishPageUrl">连网完成页URL。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_OpenPluginTokenAsync(System.String,System.String,System.Int32)">
      <summary>
            【异步方法】第三方平台获取开插件wifi_token
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="callBackUrl">回调URL，开通插件成功后的跳转页面。注：该参数域名必须与跳转进开通插件页面的页面域名保持一致，建议均采用第三方平台域名。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_GetHomePageaAsync(System.String,System.Int64,System.Int32)">
      <summary>
            【异步方法】 查询商家主页
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">查询的门店id</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_SetCouponPutAsync(System.String,System.Int64,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
            【异步方法】 设置门店卡券投放信息
             </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID，可设置为0，表示所有门店</param>
      <param name="cardId">卡券ID</param>
      <param name="cardDescribe">卡券描述，不能超过18个字符</param>
      <param name="starTime">卡券投放开始时间（单位是秒）</param>
      <param name="endTime">卡券投放结束时间（单位是秒）注：不能超过卡券的有效期时间</param>
      <param name="cardQuantity">卡券库存</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_GetStatisticsAsync(System.String,System.String,System.String,System.Int64,System.Int32)">
      <summary>
            【异步方法】数据统计
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="beginDate">起始日期时间，格式yyyy-mm-dd，最长时间跨度为30天</param>
      <param name="endDate">结束日期时间戳，格式yyyy-mm-dd，最长时间跨度为30天</param>
      <param name="shopId">按门店ID搜索，-1为总统计</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_GetDeviceListAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int64},System.Int32)">
      <summary>
             【异步方法】查询设备
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="pageIndex">分页下标，默认从1开始</param>
      <param name="pageSize">每页的个数，默认10个，最大20个</param>
      <param name="shopId">根据门店id查询</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_SetBar(System.String,System.Int64,System.Int32,System.Int32)">
      <summary>
            设置微信首页欢迎语
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="barType">微信首页欢迎语的文本内容：0--欢迎光临+公众号名称；1--欢迎光临+门店名称；2--已连接+公众号名称+WiFi；3--已连接+门店名称+Wi-Fi。</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_GetQrcode(System.String,System.Int64,System.Int32,System.Int32)">
      <summary>
            获取物料二维码
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId"></param>
      <param name="imgId"></param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_SetHomePage(System.String,System.Int64,System.String,System.Int32)">
      <summary>
            设置商家主页
            传入自定义链接则是使用自定义链接，否则使用默认模板
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="url">自定义链接（选择传入）</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_SetHomePageAsync(System.String,System.Int64,System.String,System.Int32)">
      <summary>
            【异步方法】设置商家主页
            传入自定义链接则是使用自定义链接，否则使用默认模板
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="url">自定义链接（选择传入）</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_AddstoreAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Wxa.MerchantJson.AddStoreJsonData,System.Int32)">
      <summary>
            添加门店
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data">门店数据</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_ShopGet(System.String,System.Int64,System.Int32,System.Int32,System.Int32)">
      <summary>
            查询门店Wi-Fi信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="pageindex">分页下标，默认从1开始</param>
      <param name="pagesize">每页的个数，默认10个，最大20个</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_WifeRegister(System.String,System.Int64,System.String,System.String,System.Int32)">
      <summary>
            添加portal型设备
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="ssid">无线网络设备的ssid，限30个字符以内。ssid支持中文，但可能因设备兼容性问题导致显示乱码，或无法连接等问题，相关风险自行承担！</param>
      <param name="reset">重置secretkey，false-不重置，true-重置，默认为false</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_ApplyMerchant(System.String,Senparc.Weixin.MP.AdvancedAPIs.Wxa.MerchantJson.ApplyMerchantData,System.Int32)">
      <summary>
            创建门店小程序
            <para>创建门店小程序提交后需要公众号管理员确认通过后才可进行审核。如果主管理员24小时超时未确认，才能再次提交。</para></summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data">申请数据</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_CreateMapPoi(System.String,Senparc.Weixin.MP.AdvancedAPIs.Wxa.MerchantJson.CreateMapPoiData,System.Int32)">
      <summary>
            在腾讯地图中创建门店
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data">门店数据</param>
      <param name="timeout">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_ShopListAsync(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】获取Wi-Fi门店列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="pageIndex">分页下标，默认从1开始</param>
      <param name="pageSize">每页的个数，默认10个，最大20个</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_CreateMapPoiAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Wxa.MerchantJson.CreateMapPoiData,System.Int32)">
      <summary>
            【异步方法】在腾讯地图中创建门店
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data">门店数据</param>
      <param name="timeout">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_ShopClean(System.String,System.Int64,System.String,System.Int32)">
      <summary>
            清空门店网络及设备
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="ssid">无线网络设备的ssid。若不填写ssid，默认为清空门店下所有设备；填写ssid则为清空该ssid下的所有设备</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_DeleteStore(System.String,System.String,System.Int32)">
      <summary>
            删除门店
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="poi_id">为门店小程序添加门店，审核成功后返回的门店id</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_ApplyMerchantGetMerchantCategoryResultAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Wxa.MerchantJson.ApplyMerchantData,System.Int32)">
      <summary>
            创建门店小程序
            <para>创建门店小程序提交后需要公众号管理员确认通过后才可进行审核。如果主管理员24小时超时未确认，才能再次提交。</para></summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data">申请数据</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_ShopCleanAsync(System.String,System.Int64,System.String,System.Int32)">
      <summary>
            【异步方法】清空门店网络及设备
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="ssid">无线网络设备的ssid。若不填写ssid，默认为清空门店下所有设备；填写ssid则为清空该ssid下的所有设备</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_GetMerchantAuditInfo(System.String,System.Int32)">
      <summary>
            查询门店小程序审核结果
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_WifeRegisterAsync(System.String,System.Int64,System.String,System.String,System.Int32)">
      <summary>
             【异步方法】添加portal型设备
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="ssid">无线网络设备的ssid，限30个字符以内。ssid支持中文，但可能因设备兼容性问题导致显示乱码，或无法连接等问题，相关风险自行承担！</param>
      <param name="reset">重置secretkey，false-不重置，true-重置，默认为false</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_DeleteStoreAsync(System.String,System.String,System.Int32)">
      <summary>
            删除门店
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="poi_id">为门店小程序添加门店，审核成功后返回的门店id</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_ShopUpdate(System.String,System.Int64,System.String,System.String,System.Int32)">
      <summary>
            修改门店网络信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="oldSsid">需要修改的ssid，当门店下有多个ssid时，必填</param>
      <param name="ssid">无线网络设备的ssid。32个字符以内；ssid支持中文，但可能因设备兼容性问题导致显示乱码，或无法连接等问题，相关风险自行承担！当门店下是portal型设备时，ssid必填；当门店下是密码型设备时，ssid选填，且ssid和密码必须有一个以大写字母“WX”开头</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_ShopGetAsync(System.String,System.Int64,System.Int32,System.Int32,System.Int32)">
      <summary>
            【异步方法】查询门店Wi-Fi信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="pageindex">分页下标，默认从1开始</param>
      <param name="pagesize">每页的个数，默认10个，最大20个</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_GetMerchantCategoryResultAsync(System.String,System.Int32)">
      <summary>
            拉取门店小程序类目
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut">请求超时时长</param>
      <returns>小程序类目</returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_GetMerchantAuditInfoAsync(System.String,System.Int32)">
      <summary>
            查询门店小程序审核结果
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_Addstore(System.String,Senparc.Weixin.MP.AdvancedAPIs.Wxa.MerchantJson.AddStoreJsonData,System.Int32)">
      <summary>
            添加门店
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data">门店数据</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_GetStoreInfo(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            获取门店信息列表
            <para>假如某个门店小程序有10个门店，那么offset最大是9。limit参数最大不能超过50，并且如果传入的limit参数是0，那么按默认值20处理。</para></summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="limit">获取门店个数</param>
      <param name="offset">获取门店列表的初始偏移位置，从0开始计数</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_GetMerchantCategoryResult(System.String,System.Int32)">
      <summary>
            拉取门店小程序类目
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut">请求超时时长</param>
      <returns>小程序类目</returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_ShopList(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            获取Wi-Fi门店列表
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="pageIndex">分页下标，默认从1开始</param>
      <param name="pageSize">每页的个数，默认10个，最大20个</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WiFiApi_ShopUpdateAsync(System.String,System.Int64,System.String,System.String,System.Int32)">
      <summary>
            【异步方法】修改门店网络信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="shopId">门店ID</param>
      <param name="oldSsid">需要修改的ssid，当门店下有多个ssid时，必填</param>
      <param name="ssid">无线网络设备的ssid。32个字符以内；ssid支持中文，但可能因设备兼容性问题导致显示乱码，或无法连接等问题，相关风险自行承担！当门店下是portal型设备时，ssid必填；当门店下是密码型设备时，ssid选填，且ssid和密码必须有一个以大写字母“WX”开头</param>
      <param name="timeOut"></param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_GetDistrict(System.String,System.Int32)">
      <summary>
            从腾讯地图拉取省市区信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_GetDistrictAsync(System.String,System.Int32)">
      <summary>
            【异步方法】从腾讯地图拉取省市区信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_GetStoreInfoAsync(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            获取门店信息列表
            <para>假如某个门店小程序有10个门店，那么offset最大是9。limit参数最大不能超过50，并且如果传入的limit参数是0，那么按默认值20处理。</para></summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="limit">获取门店个数</param>
      <param name="offset">获取门店列表的初始偏移位置，从0开始计数</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_ModifyMerchantAsync(System.String,System.String,System.String,System.Int32)">
      <summary>
            修改门店小程序信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="headimg_mediaid">头像 --- 临时素材mediaid 用MediaApi.UploadTemporaryMedia接口得到的</param>
      <param name="intro">门店小程序的介绍,如果不想改，参数传空值</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_GetStoreInfo01(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            获取门店信息列表
            <para>假如某个门店小程序有10个门店，那么offset最大是9。limit参数最大不能超过50，并且如果传入的limit参数是0，那么按默认值20处理。</para></summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="limit">获取门店个数</param>
      <param name="offset">获取门店列表的初始偏移位置，从0开始计数</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_GetStoreInfoAsync01(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            获取门店信息列表
            <para>假如某个门店小程序有10个门店，那么offset最大是9。limit参数最大不能超过50，并且如果传入的limit参数是0，那么按默认值20处理。</para></summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="limit">获取门店个数</param>
      <param name="offset">获取门店列表的初始偏移位置，从0开始计数</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_SearchMapPoi(System.String,System.Int32,System.String,System.Int32)">
      <summary>
            在腾讯地图中搜索门店
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="districtid">对应 拉取省市区信息接口 中的id字段</param>
      <param name="keyword">搜索的关键词</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_ModifyMerchant(System.String,System.String,System.String,System.Int32)">
      <summary>
            修改门店小程序信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="headimg_mediaid">头像 --- 临时素材mediaid 用MediaApi.UploadTemporaryMedia接口得到的</param>
      <param name="intro">门店小程序的介绍,如果不想改，参数传空值</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_SearchMapPoiAsync(System.String,System.Int32,System.String,System.Int32)">
      <summary>
            在腾讯地图中搜索门店
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="districtid">对应 拉取省市区信息接口 中的id字段</param>
      <param name="keyword">搜索的关键词</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_UpdateStore(System.String,Senparc.Weixin.MP.AdvancedAPIs.Wxa.MerchantJson.UpdateStoreData,System.Int32)">
      <summary>
            更新门店信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data">门店数据</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
    <member name="M:WeChat_OfficialAccountController.WeChat_OfficialAccount_WxaApi_UpdateStoreAsync(System.String,Senparc.Weixin.MP.AdvancedAPIs.Wxa.MerchantJson.UpdateStoreData,System.Int32)">
      <summary>
            更新门店信息
            </summary>
      <param name="accessTokenOrAppId">AccessToken或AppId（推荐使用AppId，需要先注册）</param>
      <param name="data">门店数据</param>
      <param name="timeOut">请求超时时长</param>
      <returns></returns>
    </member>
  </members>
</doc>